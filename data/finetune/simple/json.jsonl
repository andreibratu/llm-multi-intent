{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the latest local news and set the cabin temperature to 25 degrees."}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get city from current car address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_ADDRESS\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"News for $CAR_ADDRESS$\"}, \"memory\": \"NEWS_RESULT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Create a news bulleting for user given data\", \"data\": \"$NEWS_RESULT$\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the latest local news and set the cabin temperature to 25 degrees."}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get current city from current car address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_ADDRESS\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"News for $CAR_ADDRESS$\"}, \"memory\": \"NEWS_RESULT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Summarize news for user from data\", \"data\": \"$NEWS_RESULT$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the latest local news and set the cabin temperature to 25 degrees."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null}, {\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get current city from current car address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_ADDRESS\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"News for $CAR_ADDRESS$\"}, \"memory\": \"NEWS_RESULT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Summarize news for user from data\", \"data\": \"$NEWS_RESULT$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set navigation to Knorstrasse 148 and contact Jeremy about my ETA"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"Knorstrasse 148\"]}, \"memory\": \"NAVIGATION_OUTPUT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Extract ETA from json object\", \"json_object\": \"$NAVIGATION_OUTPUT$\", \"return_type\": \"string\"}, \"memory\": \"ETA\"}, {\"tool_name\": \"send_text\", \"args\": {\"who\": \"Jeremy\", \"what\": \"I am arriving to Knorstrasse 148 in $ETA$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set navigation to home and contact Elizabeth about my ETA"}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Extract home address string from car state json object. \", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"HOME_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$HOME_ADDRESS$\"]}, \"memory\": \"NAVIGATION_OUTPUT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Extract ETA from json object\", \"json_object\": \"$NAVIGATION_OUTPUT$\", \"return_type\": \"string\"}, \"memory\": \"ETA\"}, {\"tool_name\": \"send_text\", \"args\": {\"who\": \"Elizabeth\", \"what\": \"I am arriving home in $ETA$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Switch to sports and play my workout playlist"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"workout playlist\", \"types\": [\"playlist\"]}, \"memory\": \"SEARCH_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the media object nested in this json object\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"PLAYLIST\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PLAYLIST$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Switch to sports and play my workout playlist"}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"workout playlist\", \"types\": [\"playlist\"]}, \"memory\": \"SEARCH_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the media object nested in this json object\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"PLAYLIST\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PLAYLIST$\"}, \"memory\": null}, {\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set cabin temperature to 25 degrees celsius and find the closest Italian restaurant"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"italian restaurants\", \"location\": null, \"search_range\": null}, \"memory\": \"SEARCH_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest restaurant by distance\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"RESTAURANT_RESULT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to user this restaurant\", \"data\": \"$RESTAURANT_RESULT$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set cabin temperature to 25 degrees celsius and find the closest Italian restaurant"}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"italian restaurants\", \"location\": null, \"search_range\": null}, \"memory\": \"SEARCH_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest restaurant by distance\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"RESTAURANT_RESULT\"}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to user this restaurant\", \"data\": \"$RESTAURANT_RESULT$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set cabin temperature to 25 degrees celsius and find the closest Italian restaurant"}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"italian restaurants\", \"location\": null, \"search_range\": null}, \"memory\": \"SEARCH_RESULT\"}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest restaurant by distance\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"RESTAURANT_RESULT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to user this restaurant\", \"data\": \"$RESTAURANT_RESULT$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Resume playing my audiobook, navigate to the nearest EV charging station."}, {"role": "assistant", "content": "[{\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Resume playing my audiobook, navigate to the nearest EV charging station."}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\"}, {\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Resume playing my audiobook, navigate to the nearest EV charging station."}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null}, {\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Resume playing my audiobook, navigate to the nearest EV charging station."}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\"}, {\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Tell me my remaining battery range and suggest attractions or points of interest within that range."}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the remaining range of the car from the JSON state\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_RANGE\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"attractions\", \"location\": null, \"search_range\": 50}, \"memory\": \"POI\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Inform the user about remaining car range\", \"data\": \"$CAR_RANGE$\"}, \"memory\": null}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy\", \"data\": \"$POI$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Tell me my remaining battery range and suggest attractions or points of interest within that range."}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the remaining range of the car from the JSON state\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_RANGE\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"points of interest\", \"location\": null, \"search_range\": 50}, \"memory\": \"POI\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy\", \"data\": \"$POI$\"}, \"memory\": null}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Inform the user about remaining car range\", \"data\": \"$CAR_RANGE$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Recommend a kid-friendly restaurant nearby and play an audiobook for children."}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"children audiobook\", \"types\": [\"audiobook\", \"playlist\"]}, \"memory\": \"CHILD_AUDIO\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a JSON object that seems to be best children audiobook from list\", \"json_object\": \"$CHILD_AUDIO$\", \"return_type\": \"object\"}, \"memory\": \"BEST_CHILD_AUDIO\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"restaurants\", \"location\": null, \"search_range\": 15}, \"memory\": \"RESTAURANTS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.\", \"json_object\": \"$RESTAURANTS$\", \"return_type\": \"object\"}, \"memory\": \"BEST_RESTAURANT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to the user the restaurant you found or tell them if None matched criteria\", \"data\": \"$BEST_RESTAURANT$\"}, \"memory\": null}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$BEST_CHILD_AUDIO$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Recommend a kid-friendly restaurant nearby and play an audiobook for children."}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"restaurants\", \"location\": null, \"search_range\": 15}, \"memory\": \"RESTAURANTS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.\", \"json_object\": \"$RESTAURANTS$\", \"return_type\": \"object\"}, \"memory\": \"BEST_RESTAURANT\"}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"children audiobook\", \"types\": [\"audiobook\", \"playlist\"]}, \"memory\": \"CHILD_AUDIO\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a JSON object that seems to be best children audiobook from list\", \"json_object\": \"$CHILD_AUDIO$\", \"return_type\": \"object\"}, \"memory\": \"BEST_CHILD_AUDIO\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to the user the restaurant you found or tell them if None matched criteria\", \"data\": \"$BEST_RESTAURANT$\"}, \"memory\": null}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$BEST_CHILD_AUDIO$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Recommend a kid-friendly restaurant nearby and play an audiobook for children."}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"children audiobook\", \"types\": [\"audiobook\", \"playlist\"]}, \"memory\": \"CHILD_AUDIO\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"restaurants\", \"location\": null, \"search_range\": 15}, \"memory\": \"RESTAURANTS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.\", \"json_object\": \"$RESTAURANTS$\", \"return_type\": \"object\"}, \"memory\": \"BEST_RESTAURANT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a JSON object that seems to be best children audiobook from list\", \"json_object\": \"$CHILD_AUDIO$\", \"return_type\": \"object\"}, \"memory\": \"BEST_CHILD_AUDIO\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to the user the restaurant you found or tell them if None matched criteria\", \"data\": \"$BEST_RESTAURANT$\"}, \"memory\": null}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$BEST_CHILD_AUDIO$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Adjust ambient lighting to blue and play something calming."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"BLUE\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Adjust ambient lighting to blue and play something calming."}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null}, {\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"BLUE\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play calming music and dim the interior lights. Also, locate a nearby spa."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"GREEN\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"spa\", \"location\": null, \"search_range\": 15}, \"memory\": \"SPA_RESULTS\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest spa JSON object from provided JSON list\", \"json_object\": \"$SPA_RESULTS$\", \"return_type\": \"object\"}, \"memory\": \"CLOSEST_SPA\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user about the spa they rquested info about\", \"data\": \"$CLOSEST_SPA$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play calming music and dim the interior lights. Also, locate a nearby spa."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"GREEN\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"spa\", \"location\": null, \"search_range\": 15}, \"memory\": \"SPA_RESULTS\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest spa JSON object from provided JSON list\", \"json_object\": \"$PARSE_CALM$\", \"return_type\": \"object\"}, \"memory\": \"CLOSEST_SPA\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user about the spa they requested info about\", \"data\": \"$CLOSEST_SPA$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Begin my evening relaxation playlist and set the navigation for a scenic route that ends home."}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get home address from state object\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"object\"}, \"memory\": \"HOME_ADDRESS\"}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"evening relaxation\", \"types\": [\"playlist\"]}, \"memory\": \"MEDIA_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a playlist json object out of the provided media object\", \"json_object\": \"$MEDIA_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_PLAYLIST\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$NATURE_PLAYLIST$\"}, \"memory\": null}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"nature\", \"location\": null, \"search_range\": 50}, \"memory\": \"NATURE_PLACES\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Identify three closest places and return a JSON list of their addresseses\", \"json_object\": \"$NATURE_PLACES$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_ADDRESSES\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$NATURE_ADDRESSES$\", \"$HOME_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Begin my evening relaxation playlist and set the navigation for a scenic route that ends home."}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"evening relaxation\", \"types\": [\"playlist\"]}, \"memory\": \"MEDIA_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a playlist json object out of the provided media object\", \"json_object\": \"$MEDIA_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_PLAYLIST\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$NATURE_PLAYLIST$\"}, \"memory\": null}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"nature\", \"location\": null, \"search_range\": 50}, \"memory\": \"NATURE_PLACES\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Identify three closest places and return a JSON list of their addresseses\", \"json_object\": \"$NATURE_PLACES$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_ADDRESSES\"}, {\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get user home address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"object\"}, \"memory\": \"HOME_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$NATURE_ADDRESSES$\", \"$HOME_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Begin my evening relaxation playlist and set the navigation for a scenic route that ends home."}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"nature\", \"location\": null, \"search_range\": 50}, \"memory\": \"NATURE_PLACES\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Identify three closest places and return a flat JSON list of their addresseses and only their addresses\", \"json_object\": \"$NATURE_PLACES$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_ADDRESSES\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": \"$NATURE_ADDRESSES$\"}}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get driver home address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"object\"}, \"memory\": \"HOME_ADDRESS\"}, {\"tool_name\": \"add_navigation\", \"args\": {\"waypoints\": \"$HOME_ADDRESS$\"}}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"evening relaxation\", \"types\": [\"playlist\"]}, \"memory\": \"MEDIA_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a playlist json object out of the provided media object\", \"json_object\": \"$MEDIA_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_PLAYLIST\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$NATURE_PLAYLIST$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the most popular Adele song and give me fun facts about her"}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the most popular Adele song and give me fun facts about her"}, {"role": "assistant", "content": "[{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the most popular Adele song and give me fun facts about her"}, {"role": "assistant", "content": "[{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\"}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the most popular Adele song and give me fun facts about her"}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the most popular Adele song and tell me when she was born"}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"adele singer birthday\"}, \"memory\": \"ADELE_BIRTHDAY\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user birth year of Adele\", \"data\": \"$ADELE_BIRTHDAY$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the most popular Adele song and tell me when she was born"}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"adele singer birthday\"}, \"memory\": \"ADELE_BIRTHDAY\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user birth year of Adele\", \"data\": \"$ADELE_BIRTHDAY$\"}, \"memory\": null}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play the most popular Adele song and tell me when she was born"}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"adele singer birthday\"}, \"memory\": \"ADELE_BIRTHDAY\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user birth year of Adele\", \"data\": \"$ADELE_BIRTHDAY$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Navigate to a film studio and tell me facts about it"}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"film studio\", \"location\": null, \"search_range\": 50}, \"memory\": \"STUDIO_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get title of studio\", \"json_object\": \"$STUDIO_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"STUDIO_NAME\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"facts about film studio $STUDIO_NAME$\"}, \"memory\": \"SEARCH_RESULT_INTERNET\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user the facts about movie studio\", \"data\": \"$SEARCH_RESULT_INTERNET$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get address of the studio\", \"json_object\": \"$STUDIO_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"STUDIO_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$STUDIO_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Play Beethoven's Symphony from and give a brief about his life."}, {"role": "assistant", "content": "[{\"tool_name\": \"media_search\", \"args\": {\"query\": \"beethoven symphony\", \"types\": [\"track\"]}, \"memory\": \"SYMPHONY\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"Beethoven interesting facts\"}, \"memory\": \"FUN_FACTS\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user facts about beethoven given source\", \"data\": \"$FUN_FACTS\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Find the nearest gym, then locate a smoothie bar close to it."}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"gym\", \"location\": null, \"search_range\": 10}, \"memory\": \"GYM_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the closest gym from output\", \"json_object\": \"$GYM_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GYM_ADDRESS\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"smoothie bar\", \"location\": \"$GYM_ADDRESS$\", \"search_range\": 10}, \"memory\": \"SMOOTHIE_BAR\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about the closest smoothie bar from JSON object or report none is available\", \"data\": \"$SMOOTHIE_BAR$\"}, \"memory\": null}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$GYM_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Find the nearest gym, then locate a smoothie bar close to it."}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"gym\", \"location\": null, \"search_range\": 10}, \"memory\": \"GYM_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the closest gym from output\", \"json_object\": \"$GYM_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GYM_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$GYM_ADDRESS$\"]}, \"memory\": null}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"smoothie bar\", \"location\": \"$GYM_ADDRESS$\", \"search_range\": 10}, \"memory\": \"SMOOTHIE_BAR\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about the closest smoothie bar from JSON object or report none is available\", \"data\": \"$SMOOTHIE_BAR$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "What's the weather like at Rome? Also, start playing a playlist suitable for that."}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"Center city Rome Italy\"}, \"memory\": \"WEATHER_REPORT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain to the user the current weather in Rome\", \"data\": \"$WEATHER_REPORT$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Invent a spotify search that matches the mood in the following weather report. Be creative, use 3-5 words.\", \"json_object\": \"$WEATHER_REPORT$\", \"return_type\": \"string\"}, \"memory\": \"WEATHER_QUERY\"}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"$WEATHER_QUERY$\", \"types\": [\"album\", \"playlist\", \"track\"]}, \"memory\": \"MEDIA_WEATHER\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get media object from JSON object that best matches query $WEATHER_QUERY$\", \"json_object\": \"$MEDIA_WEATHER$\", \"return_type\": \"object\"}, \"memory\": \"WHAT_PLAY\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$WHAT_PLAY$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "What's the weather like at Rome? Also, start playing a playlist suitable for that."}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"Center city Rome Italy\"}, \"memory\": \"WEATHER_REPORT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Invent a spotify search that matches the mood in the following weather report\", \"json_object\": \"$WEATHER_REPORT$\", \"return_type\": \"string\"}, \"memory\": \"WEATHER_QUERY\"}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"$WEATHER_QUERY$\", \"types\": [\"album\", \"playlist\", \"track\"]}, \"memory\": \"MEDIA_WEATHER\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get media object from JSON object that best matches query $WEATHER_QUERY$\", \"json_object\": \"$MEDIA_WEATHER$\", \"return_type\": \"object\"}, \"memory\": \"WHAT_PLAY\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain to the user the current weather in Rome\", \"data\": \"$WEATHER_REPORT$\"}, \"memory\": null}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$WHAT_PLAY$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "What's the weather like at Rome? Also, start playing a playlist suitable for that."}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"Center city Rome Italy\"}, \"memory\": \"WEATHER_REPORT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Describe the following weather report as a Spotify search that fits the mood\", \"json_object\": \"$WEATHER_REPORT$\", \"return_type\": \"string\"}, \"memory\": \"WEATHER_QUERY\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain to the user the current weather in Rome\", \"data\": \"$WEATHER_REPORT$\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"$WEATHER_QUERY$\", \"types\": [\"album\", \"playlist\", \"track\"]}, \"memory\": \"MEDIA_WEATHER\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get media object from JSON object that best matches query $WEATHER_QUERY$\", \"json_object\": \"$MEDIA_WEATHER$\", \"return_type\": \"object\"}, \"memory\": \"WHAT_PLAY\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$WHAT_PLAY$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Drive to the art gallery and inform me about the ongoing exhibitions."}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"art gallery\", \"location\": null, \"search_range\": 30}, \"memory\": \"SEARCH_RESULT\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the closest art gallery\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GALLERY_ADDRESS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the name of the closest art gallery\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GALLERY_NAME\"}, {\"tool_name\": \"search_internet\", \"args\": {\"query\": \"art galleries at $GALLERY_NAME$\"}, \"memory\": \"INTERNET_SEARCH\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about the current art galleries or report none were found\", \"data\": \"$INTERNET_SEARCH$\"}, \"memory\": null}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$GALLERY_ADDRESS$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Navigate to the stadium, is the nearby merchandise store open?"}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium\", \"location\": null, \"search_range\": 30}, \"memory\": \"STADIUM_LIST\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return address of the most important stadium from JSON list\", \"json_object\": \"$STADIUM_LIST$\", \"return_type\": \"object\"}, \"memory\": \"BEST_STADIUM_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$BEST_STADIUM_ADDRESS$\"]}, \"memory\": null}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium merchandise store\", \"location\": \"$BEST_STADIUM_ADDRESS$\", \"search_range\": 2}, \"memory\": \"MERCHANDISE\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user if the merchandise store is open given a JSON description\", \"data\": \"$MERCHANDISE$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Navigate to the stadium, is the nearby merchandise store open?"}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium\", \"location\": null, \"search_range\": 30}, \"memory\": \"STADIUM_LIST\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return address of the most important stadium from JSON list\", \"json_object\": \"$STADIUM_LIST$\", \"return_type\": \"object\"}, \"memory\": \"BEST_STADIUM_ADDRESS\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium merchandise store\", \"location\": \"$BEST_STADIUM_ADDRESS$\", \"search_range\": 2}, \"memory\": \"MERCHANDISE\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$BEST_STADIUM_ADDRESS$\"]}, \"memory\": null}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user if the merchandise store is open given a JSON description\", \"data\": \"$MERCHANDISE$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Put the car in eco mode"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"EFFICIENT\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Put car into sport and set driver and copilot temperature to 25 degrees."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Put car into sport and set driver and copilot temperature to 25 degrees."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Put car into sport and set driver and copilot temperature to 25 degrees."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}, \"memory\": null}, {\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Put car into sport and set driver and copilot temperature to 25 degrees."}, {"role": "assistant", "content": "[{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}, \"memory\": null}, {\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Fully open my window"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 100, \"what_window\": \"DRIVER\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Fully close my window"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 0, \"what_window\": \"DRIVER\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Open my back in the right window a bit"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 20, \"what_window\": \"RIGHT\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Close the windows in the back"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 0, \"what_window\": \"RIGHT\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Close the windows in the back"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 0, \"what_window\": \"LEFT\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "If today is a Monday, tell me a joke. Otherwise, explain why BMW is an amazing car brand"}, {"role": "assistant", "content": "[{\"tool_name\": \"get_current_date\", \"args\": null, \"memory\": \"CURRENT_DATE\"}, {\"condition\": \"$CURRENT_DATE$ is a Monday\", \"tools\": [{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user a joke\", \"data\": null}, \"memory\": null}]}, {\"condition\": \"$CURRENT_DATE$ is not a Monday\", \"tools\": [{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain user why BMW is a good car brand\", \"data\": null}, \"memory\": null}]}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "If it rains, set navigation to closest gym. Otherwise, drive to a burger place"}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"WEATHER_REPORT\"}, {\"condition\": \"Will it rain soon based on data: $WEATHER_REPORT$\", \"tools\": [{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"gym\", \"location\": null, \"search_range\": 20}, \"memory\": \"GYM_SEARCH\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the closest gym from this JSON object\", \"json_object\": \"$GYM_SEARCH$\", \"return_type\": \"string\"}, \"memory\": \"CLOSEST_GYM_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$CLOSEST_GYM_ADDRESS$\"]}, \"memory\": null}]}, {\"condition\": \"It will not rain soon: $WEATHER_REPORT$\", \"tools\": [{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"burger places\", \"location\": null, \"search_range\": 20}, \"memory\": \"BURGERS\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of closest burger restaurant from this JSON object\", \"json_object\": \"$BURGERS$\", \"return_type\": \"string\"}, \"memory\": \"CLOSEST_BURGER_ADDRESS\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$CLOSEST_BURGER_ADDRESS$\"]}, \"memory\": null}]}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Make light inside green if it's weekend, otherwise orange"}, {"role": "assistant", "content": "[{\"tool_name\": \"get_current_date\", \"args\": null, \"memory\": \"CURRENT_DATE\"}, {\"condition\": \"$CURRENT_DATE$ is a weekend day\", \"tools\": [{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"GREEN\"}, \"memory\": null}]}, {\"condition\": \"$CURRENT_DATE$ is a weekday\", \"tools\": [{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"ORANGE\"}, \"memory\": null}]}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set the temperature for our guests in the back at 22, play some indie music that everyone will enjoy, choose the best ambient light for soundtrack"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"LEFT\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"RIGHT\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"popular indie music\", \"types\": [\"playlist\"]}, \"memory\": \"THE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select any playlist from given JSON object\", \"json_object\": \"$THE$\", \"return_type\": \"object\"}, \"memory\": \"O\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$O$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select best color for ambient light for a indie music playlist\", \"json_object\": [\"beige\", \"blue\", \"cyan\", \"green\", \"orange\", \"red\", \"white\", \"yellow\"], \"return_type\": \"string\"}, \"memory\": \"C\"}, {\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"$C$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set the temperature for our guests in the back at 22, play some indie music that everyone will enjoy, choose the best ambient light for soundtrack"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"LEFT\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"RIGHT\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"popular indie music\", \"types\": [\"playlist\"]}, \"memory\": \"THE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select any playlist from given JSON object\", \"json_object\": \"$THE$\", \"return_type\": \"object\"}, \"memory\": \"O\"}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$O$\"}, \"memory\": null}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select best ambient light colour to listen to indie music from choices bellow\", \"json_object\": [\"beige\", \"blue\", \"cyan\", \"green\", \"orange\", \"red\", \"white\", \"yellow\"], \"return_type\": \"string\"}, \"memory\": \"C\"}, {\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"$C$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set the temperature for our guests in the back at 22, play some indie music that everyone will enjoy, choose the best ambient light for soundtrack"}, {"role": "assistant", "content": "[{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"LEFT\"}, \"memory\": null}, {\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"RIGHT\"}, \"memory\": null}, {\"tool_name\": \"media_search\", \"args\": {\"query\": \"popular indie music\", \"types\": [\"playlist\"]}, \"memory\": \"THE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select any playlist from given JSON object\", \"json_object\": \"$THE$\", \"return_type\": \"object\"}, \"memory\": \"O\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select best ambient light colour to listen to indie music from choices bellow\", \"json_object\": [\"beige\", \"blue\", \"cyan\", \"green\", \"orange\", \"red\", \"white\", \"yellow\"], \"return_type\": \"string\"}, \"memory\": \"C\"}, {\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"$C$\"}, \"memory\": null}, {\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$O$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Open my window if the temperature outside is smaller than outside"}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"U\"}, {\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"O\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return interior temperature as int\", \"json_object\": \"$O$\", \"return_type\": \"string\"}, \"memory\": \"$T$\"}, {\"condition\": \"Temperature $T$ is higher than one outside $U$\", \"tools\": [{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 50, \"what_window\": \"ALL\"}, \"memory\": null}]}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Open my window if the temperature outside is smaller than outside"}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"O\"}, {\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"U\"}, {\"condition\": \"Temperature $O$ is higher than $U$\", \"tools\": [{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 50, \"what_window\": \"ALL\"}, \"memory\": null}]}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Are any of my windows open?"}, {"role": "assistant", "content": "[{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"S\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user whether the windows are open given car state. Larger than 0 means open. Car state:\\n\", \"data\": \"$S$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Is it sunny in Rome?"}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"rome city\"}, \"memory\": \"A\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Respond to user whether it is sunny in Rome\", \"data\": \"$A$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set navigation to Madrid if it is sunny there"}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"madrid city\"}, \"memory\": \"TR\"}, {\"condition\": \"Based on this data, does it rain: $TR$\", \"tools\": [{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user it rains in Madrid; discard data\", \"data\": null}, \"memory\": null}]}, {\"condition\": \"It will not rain based on this data $TR$\", \"tools\": [{\"tool_name\": \"query_to_place\", \"args\": {\"query\": \"madrid city center\"}, \"memory\": \"NAV\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get address from object and return it\", \"json_object\": \"$NAV$\", \"return_type\": \"string\"}, \"memory\": \"NAV_ADDR\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$NAV_ADDR$\"]}}]}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set navigation to Madrid if it is sunny there"}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"madrid city\"}, \"memory\": \"TR\"}, {\"condition\": \"Weather in this report is sunny $TR$\", \"tools\": [{\"tool_name\": \"query_to_place\", \"args\": {\"query\": \"madrid city center\"}, \"memory\": \"NAV\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get address from object and return it\", \"json_object\": \"$NAV$\", \"return_type\": \"string\"}, \"memory\": \"NAV_ADDR\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$NAV_ADDR$\"]}}]}, {\"condition\": \"Weather in report is rainy $TR$\", \"tools\": [{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user it rains in Madrid; discard data\", \"data\": null}, \"memory\": null}]}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "What is Wikipedia?"}, {"role": "assistant", "content": "[{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is wikipedia?\"}, \"memory\": \"W\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"explain user what wikipedia is\", \"data\": \"$W$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "what is philosophy?"}, {"role": "assistant", "content": "[{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is philosophy?\"}, \"memory\": \"W\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"explain user what philosophy is\", \"data\": \"$W$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Find a cheap vegan restaurant nearby"}, {"role": "assistant", "content": "[{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"vegan restaurants\", \"location\": null, \"search_range\": 10}, \"memory\": \"SR\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Choose the address of the cheapest vegan restaurant and return it from JSON object\", \"json_object\": \"$SR$\", \"return_type\": \"string\"}, \"memory\": \"X\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$X$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Mute the volume but don't turn it off"}, {"role": "assistant", "content": "[{\"tool_name\": \"media_control_volume\", \"args\": {\"volume\": 10}}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set navigation to Berlin centre. Is there a cafe at my final location?"}, {"role": "assistant", "content": "[{\"tool_name\": \"query_to_place\", \"args\": {\"query\": \"berlin city\"}, \"memory\": \"N\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"get address from object and return it\", \"json_object\": \"$N$\", \"return_type\": \"string\"}, \"memory\": \"N_ADDR\"}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$N_ADDR$\"]}, \"memory\": null}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"cafe\", \"location\": \"$N_ADDR$\"}, \"memory\": \"WHAT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about found cafes in Berlin\", \"data\": \"$WHAT\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "Set navigation to Berlin centre. Is there a cafe at my final location?"}, {"role": "assistant", "content": "[{\"tool_name\": \"query_to_place\", \"args\": {\"query\": \"berlin city\"}, \"memory\": \"N\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"get address from object and return it\", \"json_object\": \"$N$\", \"return_type\": \"string\"}, \"memory\": \"N_ADDR\"}, {\"tool_name\": \"places_tool\", \"args\": {\"query\": \"cafe\", \"location\": \"$N_ADDR$\"}, \"memory\": \"WHAT\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about found cafes in Berlin\", \"data\": \"$WHAT\"}, \"memory\": null}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$N_ADDR$\"]}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "What is the name of the best cafe in Rome? Also lower the volume to bearly hearable"}, {"role": "assistant", "content": "[{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is best cafe in Rome?\"}, \"memory\": \"BCRJ\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user what seems be best cafe in Rome\", \"data\": \"$BCRJ$\"}, \"memory\": null}, {\"tool_name\": \"media_control_volume\", \"args\": {\"volume\": 20}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "What is the name of the best cafe in Rome? Also lower the volume to bearly hearable"}, {"role": "assistant", "content": "[{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is best cafe in Rome?\"}, \"memory\": \"BCRJ\"}, {\"tool_name\": \"media_control_volume\", \"args\": {\"volume\": 20}, \"memory\": null}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user what seems be best cafe in Rome\", \"data\": \"$BCRJ$\"}, \"memory\": null}]"}]]}
{"messages": [[{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. "}, {"role": "user", "content": "If the weather is sunny outside find a cafe, otherwise find a restaurant"}, {"role": "assistant", "content": "[{\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"WEATHER\"}, {\"condition\": \"Weather is sunny in report $WEATHER$\", \"tools\": [{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"cafe\", \"search_mode\": \"near_current_location\"}, \"memory\": \"PLACES\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find the best cafe from the list, return it as JSON object\", \"json_object\": \"$PLACES$\", \"return_type\": \"object\"}, \"memory\": \"BEST_PLACE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address from object\", \"json_object\": \"$BEST_PLACE$\", \"return_type\": \"string\"}, \"memory\": \"PLACE_ADDRESS\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user navigation is set to this cafe and give it a very short description\", \"data\": \"$PLACE_ADDRESS$\"}, \"memory\": null}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$PLACE_ADDRESS$\"]}, \"memory\": null}]}, {\"condition\": \"Weather in report is rainy: $WEATHER$\", \"tools\": [{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"restaurant\", \"search_mode\": \"near_current_location\"}, \"memory\": \"PLACES\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find the best indoor restaurant from the list, return it as JSON object\", \"json_object\": \"$PLACES$\", \"return_type\": \"object\"}, \"memory\": \"BEST_PLACE\"}, {\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the object\", \"json_object\": \"$BEST_PLACE$\", \"return_type\": \"string\"}, \"memory\": \"PLACE_ADDRESS\"}, {\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user navigation is set to this restaurnt and give it a very short description\", \"data\": \"$PLACE_ADDRESS$\"}, \"memory\": null}, {\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$PLACE_ADDRESS$\"]}, \"memory\": null}]}]"}]]}
