{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to get car state for location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get city from current car address', 'json_object': '$CAR_STATE$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get city from current car address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_ADDRESS\", \"reason\": \"This tool uses LLM to extract only the city part of address\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'News for $CAR_ADDRESS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"News for $CAR_ADDRESS$\"}, \"memory\": \"NEWS_RESULT\", \"reason\": \"Need external info for news\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Create a news bulleting for user given data', 'data': '$NEWS_RESULT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Create a news bulleting for user given data\", \"data\": \"$NEWS_RESULT$\"}, \"memory\": null, \"reason\": \"Summarise news for user\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'ALL'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null, \"reason\": \"Handle other objective, set temperature\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to get car state for location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'ALL'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null, \"reason\": \"Handle other objective, set temperature\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get current city from current car address', 'json_object': '$CAR_STATE$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get current city from current car address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_ADDRESS\", \"reason\": \"This tool uses LLM to extract car address\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'News for $CAR_ADDRESS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"News for $CAR_ADDRESS$\"}, \"memory\": \"NEWS_RESULT\", \"reason\": \"Need external info for news\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Summarize news for user from data', 'data': '$NEWS_RESULT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Summarize news for user from data\", \"data\": \"$NEWS_RESULT$\"}, \"memory\": null, \"reason\": \"Summarise news for user\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'ALL'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null, \"reason\": \"Change temperature in car per user request\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to get car state for location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get current city from current car address', 'json_object': '$CAR_STATE$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get current city from current car address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_ADDRESS\", \"reason\": \"This tool uses LLM to extract data\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'News for $CAR_ADDRESS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"News for $CAR_ADDRESS$\"}, \"memory\": \"NEWS_RESULT\", \"reason\": \"Need external info for news\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Summarize news for user from data', 'data': '$NEWS_RESULT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Summarize news for user from data\", \"data\": \"$NEWS_RESULT$\"}, \"memory\": null, \"reason\": \"Summarise news for user\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['Knorstrasse 148']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"Knorstrasse 148\"]}, \"memory\": \"NAVIGATION_OUTPUT\", \"reason\": \"Set car navigation per user request\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Extract ETA from json object', 'json_object': '$NAVIGATION_OUTPUT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Extract ETA from json object\", \"json_object\": \"$NAVIGATION_OUTPUT$\", \"return_type\": \"string\"}, \"memory\": \"ETA\", \"reason\": \"Get ETA from output of set_navigation\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function send_text with args {'who': 'Jeremy', 'what': 'I am arriving to Knorstrasse 148 in $ETA$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"send_text\", \"args\": {\"who\": \"Jeremy\", \"what\": \"I am arriving to Knorstrasse 148 in $ETA$\"}, \"memory\": null, \"reason\": \"Send text with ETA\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to get car state for home location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Extract home address string from car state json object. ', 'json_object': '$CAR_STATE$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Extract home address string from car state json object. \", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"HOME_ADDRESS\", \"reason\": \"Get user preference for home address\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$HOME_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$HOME_ADDRESS$\"]}, \"memory\": \"NAVIGATION_OUTPUT\", \"reason\": \"Navigate to home\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Extract ETA from json object', 'json_object': '$NAVIGATION_OUTPUT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Extract ETA from json object\", \"json_object\": \"$NAVIGATION_OUTPUT$\", \"return_type\": \"string\"}, \"memory\": \"ETA\", \"reason\": \"Get ETA from output of set_navigation\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function send_text with args {'who': 'Elizabeth', 'what': 'I am arriving home in $ETA$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"send_text\", \"args\": {\"who\": \"Elizabeth\", \"what\": \"I am arriving home in $ETA$\"}, \"memory\": null, \"reason\": \"Send text with ETA\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_driving_mode with args {'driving_mode': 'SPORT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null, \"reason\": \"Set driving mode per user request\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'workout playlist', 'types': ['playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"workout playlist\", \"types\": [\"playlist\"]}, \"memory\": \"SEARCH_RESULT\", \"reason\": \"Search media for workout music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the media object nested in this json object', 'json_object': '$SEARCH_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the media object nested in this json object\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"PLAYLIST\", \"reason\": \"Need to select a single object to enque\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$PLAYLIST$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PLAYLIST$\"}, \"memory\": null, \"reason\": \"Select what to play in car media system\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'workout playlist', 'types': ['playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"workout playlist\", \"types\": [\"playlist\"]}, \"memory\": \"SEARCH_RESULT\", \"reason\": \"Search media for workout music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the media object nested in this json object', 'json_object': '$SEARCH_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the media object nested in this json object\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"PLAYLIST\", \"reason\": \"Need to select a single object to enque\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$PLAYLIST$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PLAYLIST$\"}, \"memory\": null, \"reason\": \"Select what to play in car media system\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_driving_mode with args {'driving_mode': 'SPORT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null, \"reason\": \"Set driving mode per user request\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'ALL'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null, \"reason\": \"Set cabin temperature\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'italian restaurants', 'location': None, 'search_range': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"italian restaurants\", \"location\": null, \"search_range\": null}, \"memory\": \"SEARCH_RESULT\", \"reason\": \"Search for Italian restaurants near car location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the closest restaurant by distance', 'json_object': '$SEARCH_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest restaurant by distance\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"RESTAURANT_RESULT\", \"reason\": \"Select a single object out of list that is closest\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Describe to user this restaurant', 'data': '$RESTAURANT_RESULT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to user this restaurant\", \"data\": \"$RESTAURANT_RESULT$\"}, \"memory\": null, \"reason\": \"Tell to user about the restaurant but not navigate to it\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'italian restaurants', 'location': None, 'search_range': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"italian restaurants\", \"location\": null, \"search_range\": null}, \"memory\": \"SEARCH_RESULT\", \"reason\": \"Search for Italian restaurants near car location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the closest restaurant by distance', 'json_object': '$SEARCH_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest restaurant by distance\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"RESTAURANT_RESULT\", \"reason\": \"Select a single object out of list that is closest\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'ALL'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null, \"reason\": \"Set cabin temperature\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Describe to user this restaurant', 'data': '$RESTAURANT_RESULT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to user this restaurant\", \"data\": \"$RESTAURANT_RESULT$\"}, \"memory\": null, \"reason\": \"Tell to user about the restaurant but not navigate to it\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'italian restaurants', 'location': None, 'search_range': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"italian restaurants\", \"location\": null, \"search_range\": null}, \"memory\": \"SEARCH_RESULT\", \"reason\": \"Search for Italian restaurants near car location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'ALL'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"ALL\"}, \"memory\": null, \"reason\": \"Set cabin temperature\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the closest restaurant by distance', 'json_object': '$SEARCH_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest restaurant by distance\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"RESTAURANT_RESULT\", \"reason\": \"Select a single object out of list that is closest\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Describe to user this restaurant', 'data': '$RESTAURANT_RESULT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to user this restaurant\", \"data\": \"$RESTAURANT_RESULT$\"}, \"memory\": null, \"reason\": \"Tell to user about the restaurant but not navigate to it\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_play with args {'playing': True}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null, \"reason\": \"Resume playing\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'EV charging stations', 'location': None, 'search_range': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\", \"reason\": \"Search for EV charging stations\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.', 'json_object': '$EV_CHARGE_STATIONS$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\", \"reason\": \"Use LLM parsing to fetch the closest JSON object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$EV_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to identified EV station\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'EV charging stations', 'location': None, 'search_range': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\", \"reason\": \"Search for EV charging stations\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_play with args {'playing': True}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null, \"reason\": \"Resume playing\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.', 'json_object': '$EV_CHARGE_STATIONS$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\", \"reason\": \"Use LLM parsing to fetch the closest JSON object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$EV_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to identified EV station\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'EV charging stations', 'location': None, 'search_range': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\", \"reason\": \"Search for EV charging stations\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.', 'json_object': '$EV_CHARGE_STATIONS$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\", \"reason\": \"Use LLM parsing to fetch the closest JSON object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$EV_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to identified EV station\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_play with args {'playing': True}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null, \"reason\": \"Resume playing\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'EV charging stations', 'location': None, 'search_range': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"EV charging stations\", \"location\": null, \"search_range\": null}, \"memory\": \"EV_CHARGE_STATIONS\", \"reason\": \"Search for EV charging stations\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.', 'json_object': '$EV_CHARGE_STATIONS$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.\", \"json_object\": \"$EV_CHARGE_STATIONS$\", \"return_type\": \"string\"}, \"memory\": \"EV_ADDRESS\", \"reason\": \"Use LLM parsing to fetch the closest JSON object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_play with args {'playing': True}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_play\", \"args\": {\"playing\": true}, \"memory\": null, \"reason\": \"Resume playing\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$EV_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$EV_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to identified EV station\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to fetch battery status from car state\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the remaining range of the car from the JSON state', 'json_object': '$CAR_STATE$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the remaining range of the car from the JSON state\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_RANGE\", \"reason\": \"Use LLM parsing to identify battery range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'attractions', 'location': None, 'search_range': 50}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"attractions\", \"location\": null, \"search_range\": 50}, \"memory\": \"POI\", \"reason\": \"Find points of interest, tourist attractions in car range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Inform the user about remaining car range', 'data': '$CAR_RANGE$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Inform the user about remaining car range\", \"data\": \"$CAR_RANGE$\"}, \"memory\": null, \"reason\": \"Tell user what battery range is left\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy', 'data': '$POI$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy\", \"data\": \"$POI$\"}, \"memory\": null, \"reason\": \"Suggest user what places could be visited\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to fetch battery status from car state\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the remaining range of the car from the JSON state', 'json_object': '$CAR_STATE$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the remaining range of the car from the JSON state\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"string\"}, \"memory\": \"CAR_RANGE\", \"reason\": \"Find points of interest, tourist attractions nearby\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'points of interest', 'location': None, 'search_range': 50}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"points of interest\", \"location\": null, \"search_range\": 50}, \"memory\": \"POI\", \"reason\": \"Find tourist places in driving range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy', 'data': '$POI$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy\", \"data\": \"$POI$\"}, \"memory\": null, \"reason\": \"Suggest user places to visit\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Inform the user about remaining car range', 'data': '$CAR_RANGE$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Inform the user about remaining car range\", \"data\": \"$CAR_RANGE$\"}, \"memory\": null, \"reason\": \"Tell user the remaining range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'children audiobook', 'types': ['audiobook', 'playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"children audiobook\", \"types\": [\"audiobook\", \"playlist\"]}, \"memory\": \"CHILD_AUDIO\", \"reason\": \"Find a list of children audiobooks\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get a JSON object that seems to be best children audiobook from list', 'json_object': '$CHILD_AUDIO$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a JSON object that seems to be best children audiobook from list\", \"json_object\": \"$CHILD_AUDIO$\", \"return_type\": \"object\"}, \"memory\": \"BEST_CHILD_AUDIO\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'restaurants', 'location': None, 'search_range': 15}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"restaurants\", \"location\": null, \"search_range\": 15}, \"memory\": \"RESTAURANTS\", \"reason\": \"Find restaurants 15 km away from car max\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.', 'json_object': '$RESTAURANTS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.\", \"json_object\": \"$RESTAURANTS$\", \"return_type\": \"object\"}, \"memory\": \"BEST_RESTAURANT\", \"reason\": \"Single out a restaurant for the driver\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Describe to the user the restaurant you found or tell them if None matched criteria', 'data': '$BEST_RESTAURANT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to the user the restaurant you found or tell them if None matched criteria\", \"data\": \"$BEST_RESTAURANT$\"}, \"memory\": null, \"reason\": \"Tell user what restaurant has been decided for them\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$BEST_CHILD_AUDIO$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$BEST_CHILD_AUDIO$\"}, \"memory\": null, \"reason\": \"Enqueue the audiobook for play\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'restaurants', 'location': None, 'search_range': 15}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"restaurants\", \"location\": null, \"search_range\": 15}, \"memory\": \"RESTAURANTS\", \"reason\": \"Find restaurants 15 km away from car max\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.', 'json_object': '$RESTAURANTS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.\", \"json_object\": \"$RESTAURANTS$\", \"return_type\": \"object\"}, \"memory\": \"BEST_RESTAURANT\", \"reason\": \"single out a single restaurant for the driver\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'children audiobook', 'types': ['audiobook', 'playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"children audiobook\", \"types\": [\"audiobook\", \"playlist\"]}, \"memory\": \"CHILD_AUDIO\", \"reason\": \"Find a list of children audiobooks\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get a JSON object that seems to be best children audiobook from list', 'json_object': '$CHILD_AUDIO$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a JSON object that seems to be best children audiobook from list\", \"json_object\": \"$CHILD_AUDIO$\", \"return_type\": \"object\"}, \"memory\": \"BEST_CHILD_AUDIO\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Describe to the user the restaurant you found or tell them if None matched criteria', 'data': '$BEST_RESTAURANT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to the user the restaurant you found or tell them if None matched criteria\", \"data\": \"$BEST_RESTAURANT$\"}, \"memory\": null, \"reason\": \"Tell user what restaurant has been decided for them\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$BEST_CHILD_AUDIO$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$BEST_CHILD_AUDIO$\"}, \"memory\": null, \"reason\": \"Enqueue the audiobook for play\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'children audiobook', 'types': ['audiobook', 'playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"children audiobook\", \"types\": [\"audiobook\", \"playlist\"]}, \"memory\": \"CHILD_AUDIO\", \"reason\": \"Find a list of children audiobooks\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'restaurants', 'location': None, 'search_range': 15}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"restaurants\", \"location\": null, \"search_range\": 15}, \"memory\": \"RESTAURANTS\", \"reason\": \"Find restaurants 15 km away from car max\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.', 'json_object': '$RESTAURANTS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.\", \"json_object\": \"$RESTAURANTS$\", \"return_type\": \"object\"}, \"memory\": \"BEST_RESTAURANT\", \"reason\": \"Single out a single restaurant for the driver\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get a JSON object that seems to be best children audiobook from list', 'json_object': '$CHILD_AUDIO$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a JSON object that seems to be best children audiobook from list\", \"json_object\": \"$CHILD_AUDIO$\", \"return_type\": \"object\"}, \"memory\": \"BEST_CHILD_AUDIO\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Describe to the user the restaurant you found or tell them if None matched criteria', 'data': '$BEST_RESTAURANT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Describe to the user the restaurant you found or tell them if None matched criteria\", \"data\": \"$BEST_RESTAURANT$\"}, \"memory\": null, \"reason\": \"Tell user what restaurant has been decided for them\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$BEST_CHILD_AUDIO$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$BEST_CHILD_AUDIO$\"}, \"memory\": null, \"reason\": \"Enqueue the audiobook for play\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_ambient_light with args {'light_color': 'BLUE'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"BLUE\"}, \"memory\": null, \"reason\": \"Set ambient light to blue\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'calming sounds', 'types': ['playlist', 'show', 'track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\", \"reason\": \"Search for calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Pick the media JSON object from this list that best fits calming music. Return a single one', 'json_object': 'MEDIA_RESULT', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$PARSE_CALM$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null, \"reason\": \"Enqueue the calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'calming sounds', 'types': ['playlist', 'show', 'track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\", \"reason\": \"Search for calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Pick the media JSON object from this list that best fits calming music. Return a single one', 'json_object': 'MEDIA_RESULT', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$PARSE_CALM$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null, \"reason\": \"Enqueue the calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_ambient_light with args {'light_color': 'BLUE'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"BLUE\"}, \"memory\": null, \"reason\": \"Set ambient light to blue\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_ambient_light with args {'light_color': 'GREEN'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"GREEN\"}, \"memory\": null, \"reason\": \"Set ambient light to green\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'calming sounds', 'types': ['playlist', 'show', 'track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\", \"reason\": \"Search for calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Pick the media JSON object from this list that best fits calming music. Return a single one', 'json_object': 'MEDIA_RESULT', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'spa', 'location': None, 'search_range': 15}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"spa\", \"location\": null, \"search_range\": 15}, \"memory\": \"SPA_RESULTS\", \"reason\": \"Find a spa nearby in 15 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$PARSE_CALM$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null, \"reason\": \"Enqueue the calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the closest spa JSON object from provided JSON list', 'json_object': '$SPA_RESULTS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest spa JSON object from provided JSON list\", \"json_object\": \"$SPA_RESULTS$\", \"return_type\": \"object\"}, \"memory\": \"CLOSEST_SPA\", \"reason\": \"Select a single spa object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell the user about the spa they rquested info about', 'data': '$CLOSEST_SPA$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user about the spa they rquested info about\", \"data\": \"$CLOSEST_SPA$\"}, \"memory\": null, \"reason\": \"Inform user about the spa\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_ambient_light with args {'light_color': 'GREEN'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"GREEN\"}, \"memory\": null, \"reason\": \"Set ambient light to green\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'calming sounds', 'types': ['playlist', 'show', 'track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"calming sounds\", \"types\": [\"playlist\", \"show\", \"track\"]}, \"memory\": \"MEDIA_RESULT\", \"reason\": \"Search for calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Pick the media JSON object from this list that best fits calming music. Return a single one', 'json_object': 'MEDIA_RESULT', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Pick the media JSON object from this list that best fits calming music. Return a single one\", \"json_object\": \"MEDIA_RESULT\", \"return_type\": \"object\"}, \"memory\": \"PARSE_CALM\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'spa', 'location': None, 'search_range': 15}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"spa\", \"location\": null, \"search_range\": 15}, \"memory\": \"SPA_RESULTS\", \"reason\": \"Find a spa nearby in 15 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$PARSE_CALM$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$PARSE_CALM$\"}, \"memory\": null, \"reason\": \"Enqueue the calming music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the closest spa JSON object from provided JSON list', 'json_object': '$PARSE_CALM$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the closest spa JSON object from provided JSON list\", \"json_object\": \"$PARSE_CALM$\", \"return_type\": \"object\"}, \"memory\": \"CLOSEST_SPA\", \"reason\": \"Select a single spa object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell the user about the spa they requested info about', 'data': '$CLOSEST_SPA$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user about the spa they requested info about\", \"data\": \"$CLOSEST_SPA$\"}, \"memory\": null, \"reason\": \"Inform user about the spa\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to get car state for home location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get home address from state object', 'json_object': '$CAR_STATE$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get home address from state object\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"object\"}, \"memory\": \"HOME_ADDRESS\", \"reason\": \"Get user preference for home address\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'evening relaxation', 'types': ['playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"evening relaxation\", \"types\": [\"playlist\"]}, \"memory\": \"MEDIA_RESULT\", \"reason\": \"Search for evening relaxation music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get a playlist json object out of the provided media object', 'json_object': '$MEDIA_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a playlist json object out of the provided media object\", \"json_object\": \"$MEDIA_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_PLAYLIST\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$NATURE_PLAYLIST$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$NATURE_PLAYLIST$\"}, \"memory\": null, \"reason\": \"Enqueue the evening relaxation music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'nature', 'location': None, 'search_range': 50}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"nature\", \"location\": null, \"search_range\": 50}, \"memory\": \"NATURE_PLACES\", \"reason\": \"Find nature places in 50 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Identify three closest places and return a JSON list of their addresseses', 'json_object': '$NATURE_PLACES$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Identify three closest places and return a JSON list of their addresseses\", \"json_object\": \"$NATURE_PLACES$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_ADDRESSES\", \"reason\": \"Select a single spa object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$NATURE_ADDRESSES$', '$HOME_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$NATURE_ADDRESSES$\", \"$HOME_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to identified nature places and then home\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'evening relaxation', 'types': ['playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"evening relaxation\", \"types\": [\"playlist\"]}, \"memory\": \"MEDIA_RESULT\", \"reason\": \"Search for evening relaxation music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get a playlist json object out of the provided media object', 'json_object': '$MEDIA_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a playlist json object out of the provided media object\", \"json_object\": \"$MEDIA_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_PLAYLIST\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$NATURE_PLAYLIST$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$NATURE_PLAYLIST$\"}, \"memory\": null, \"reason\": \"Enqueue the evening relaxation music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'nature', 'location': None, 'search_range': 50}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"nature\", \"location\": null, \"search_range\": 50}, \"memory\": \"NATURE_PLACES\", \"reason\": \"Find nature places in 50 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Identify three closest places and return a JSON list of their addresseses', 'json_object': '$NATURE_PLACES$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Identify three closest places and return a JSON list of their addresseses\", \"json_object\": \"$NATURE_PLACES$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_ADDRESSES\", \"reason\": \"Select a single spa object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to get car state for home location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get user home address', 'json_object': '$CAR_STATE$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get user home address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"object\"}, \"memory\": \"HOME_ADDRESS\", \"reason\": \"Get user preference for home address\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$NATURE_ADDRESSES$', '$HOME_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$NATURE_ADDRESSES$\", \"$HOME_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to identified nature places and then home\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"CAR_STATE\", \"reason\": \"Need to get car state for home location\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'nature', 'location': None, 'search_range': 50}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"nature\", \"location\": null, \"search_range\": 50}, \"memory\": \"NATURE_PLACES\", \"reason\": \"Find nature places in 50 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Identify three closest places and return a flat JSON list of their addresseses and only their addresses', 'json_object': '$NATURE_PLACES$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Identify three closest places and return a flat JSON list of their addresseses and only their addresses\", \"json_object\": \"$NATURE_PLACES$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_ADDRESSES\", \"reason\": \"Select a single spa object\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': '$NATURE_ADDRESSES$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": \"$NATURE_ADDRESSES$\"}, \"memory\": null, \"reason\": \"Navigate to identified nature places\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get driver home address', 'json_object': '$CAR_STATE$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get driver home address\", \"json_object\": \"$CAR_STATE$\", \"return_type\": \"object\"}, \"memory\": \"HOME_ADDRESS\", \"reason\": \"Get user preference for home address\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function add_navigation with args {'waypoints': '$HOME_ADDRESS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"add_navigation\", \"args\": {\"waypoints\": \"$HOME_ADDRESS$\"}}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'evening relaxation', 'types': ['playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"evening relaxation\", \"types\": [\"playlist\"]}, \"memory\": \"MEDIA_RESULT\", \"reason\": \"Search for evening relaxation music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get a playlist json object out of the provided media object', 'json_object': '$MEDIA_RESULT$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get a playlist json object out of the provided media object\", \"json_object\": \"$MEDIA_RESULT$\", \"return_type\": \"object\"}, \"memory\": \"NATURE_PLAYLIST\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$NATURE_PLAYLIST$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$NATURE_PLAYLIST$\"}, \"memory\": null, \"reason\": \"Enqueue the evening relaxation music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'adele', 'types': ['track', 'artist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\", \"reason\": \"Search for Adele songs\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the json object best matching the most popular adele song', 'json_object': '$ADELE_SONGS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\", \"reason\": \"Select a single object out of list that is closest\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$ADELE_SONG'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null, \"reason\": \"Enqueue the most popular Adele song\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'fun adele singer facts'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\", \"reason\": \"Search for fun facts about Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Give user a short summary of best Adele facts', 'data': '$ADELE_FUN_FACTS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null, \"reason\": \"Tell user about Adele facts\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'fun adele singer facts'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\", \"reason\": \"Search for fun facts about Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Give user a short summary of best Adele facts', 'data': '$ADELE_FUN_FACTS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null, \"reason\": \"Tell user about Adele facts\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'adele', 'types': ['track', 'artist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\", \"reason\": \"Search for Adele songs\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the json object best matching the most popular adele song', 'json_object': '$ADELE_SONGS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\", \"reason\": \"Select a single object out of list that is closest\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$ADELE_SONG'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null, \"reason\": \"Enqueue the most popular Adele song\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'fun adele singer facts'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\", \"reason\": \"Search for fun facts about Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'adele', 'types': ['track', 'artist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\", \"reason\": \"Search for Adele songs\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Give user a short summary of best Adele facts', 'data': '$ADELE_FUN_FACTS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null, \"reason\": \"Tell user about Adele facts\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the json object best matching the most popular adele song', 'json_object': '$ADELE_SONGS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\", \"reason\": \"Select a single object out of list that is closest\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$ADELE_SONG'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null, \"reason\": \"Enqueue the most popular Adele song\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'adele', 'types': ['track', 'artist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\", \"reason\": \"Search for Adele songs\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'fun adele singer facts'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"fun adele singer facts\"}, \"memory\": \"ADELE_FUN_FACTS\", \"reason\": \"Search for fun facts about Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Give user a short summary of best Adele facts', 'data': '$ADELE_FUN_FACTS$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Give user a short summary of best Adele facts\", \"data\": \"$ADELE_FUN_FACTS$\"}, \"memory\": null, \"reason\": \"Tell user about Adele facts\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the json object best matching the most popular adele song', 'json_object': '$ADELE_SONGS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\", \"reason\": \"Select a single song to play\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$ADELE_SONG'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null, \"reason\": \"Enqueue the most popular Adele song\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'adele', 'types': ['track', 'artist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\", \"reason\": \"Search for Adele songs\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'adele singer birthday'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"adele singer birthday\"}, \"memory\": \"ADELE_BIRTHDAY\", \"reason\": \"Search for Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user birth year of Adele', 'data': '$ADELE_BIRTHDAY$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user birth year of Adele\", \"data\": \"$ADELE_BIRTHDAY$\"}, \"memory\": null, \"reason\": \"Tell user birth year of Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the json object best matching the most popular adele song', 'json_object': '$ADELE_SONGS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\", \"reason\": \"Select a single song to play\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$ADELE_SONG'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null, \"reason\": \"Enqueue the most popular Adele song\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'adele', 'types': ['track', 'artist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\", \"reason\": \"Search for Adele songs\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'adele singer birthday'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"adele singer birthday\"}, \"memory\": \"ADELE_BIRTHDAY\", \"reason\": \"Search for Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the json object best matching the most popular adele song', 'json_object': '$ADELE_SONGS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\", \"reason\": \"Select a single song to play\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user birth year of Adele', 'data': '$ADELE_BIRTHDAY$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user birth year of Adele\", \"data\": \"$ADELE_BIRTHDAY$\"}, \"memory\": null, \"reason\": \"Tell user birth year of Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$ADELE_SONG'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null, \"reason\": \"Enqueue the most popular Adele song\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'adele', 'types': ['track', 'artist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"adele\", \"types\": [\"track\", \"artist\"]}, \"memory\": \"ADELE_SONGS\", \"reason\": \"Search for Adele songs\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'adele singer birthday'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"adele singer birthday\"}, \"memory\": \"ADELE_BIRTHDAY\", \"reason\": \"Search for Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return the json object best matching the most popular adele song', 'json_object': '$ADELE_SONGS$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return the json object best matching the most popular adele song\", \"json_object\": \"$ADELE_SONGS$\", \"return_type\": \"object\"}, \"memory\": \"ADELE_SONG\", \"reason\": \"Select a single song to play\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$ADELE_SONG'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$ADELE_SONG\"}, \"memory\": null, \"reason\": \"Enqueue the most popular Adele song\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user birth year of Adele', 'data': '$ADELE_BIRTHDAY$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user birth year of Adele\", \"data\": \"$ADELE_BIRTHDAY$\"}, \"memory\": null, \"reason\": \"Tell user birth year of Adele\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'film studio', 'location': None, 'search_range': 50}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"film studio\", \"location\": null, \"search_range\": 50}, \"memory\": \"STUDIO_RESULT\", \"reason\": \"Find film studio in 50 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get title of studio', 'json_object': '$STUDIO_RESULT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get title of studio\", \"json_object\": \"$STUDIO_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"STUDIO_NAME\", \"reason\": \"Get the name of the studio\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'facts about film studio $STUDIO_NAME$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"facts about film studio $STUDIO_NAME$\"}, \"memory\": \"SEARCH_RESULT_INTERNET\", \"reason\": \"Search for facts about the studio\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user the facts about movie studio', 'data': '$SEARCH_RESULT_INTERNET$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user the facts about movie studio\", \"data\": \"$SEARCH_RESULT_INTERNET$\"}, \"memory\": null, \"reason\": \"Tell user facts about the studio\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get address of the studio', 'json_object': '$STUDIO_RESULT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get address of the studio\", \"json_object\": \"$STUDIO_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"STUDIO_ADDRESS\", \"reason\": \"Get the address of the studio\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$STUDIO_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$STUDIO_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to the studio\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'beethoven symphony', 'types': ['track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"beethoven symphony\", \"types\": [\"track\"]}, \"memory\": \"SYMPHONY\", \"reason\": \"Search for Beethoven\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'Beethoven interesting facts'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"Beethoven interesting facts\"}, \"memory\": \"FUN_FACTS\", \"reason\": \"Search for interesting facts about Beethoven\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user facts about beethoven given source', 'data': '$FUN_FACTS'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user facts about beethoven given source\", \"data\": \"$FUN_FACTS\"}, \"memory\": null, \"reason\": \"Tell user facts about Beethoven\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'gym', 'location': None, 'search_range': 10}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"gym\", \"location\": null, \"search_range\": 10}, \"memory\": \"GYM_RESULT\", \"reason\": \"Find gym in 10 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the address of the closest gym from output', 'json_object': '$GYM_RESULT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the closest gym from output\", \"json_object\": \"$GYM_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GYM_ADDRESS\", \"reason\": \"Get the address of the gym\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'smoothie bar', 'location': '$GYM_ADDRESS$', 'search_range': 10}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"smoothie bar\", \"location\": \"$GYM_ADDRESS$\", \"search_range\": 10}, \"memory\": \"SMOOTHIE_BAR\", \"reason\": \"Find smoothie bar near gym\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user about the closest smoothie bar from JSON object or report none is available', 'data': '$SMOOTHIE_BAR$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about the closest smoothie bar from JSON object or report none is available\", \"data\": \"$SMOOTHIE_BAR$\"}, \"memory\": null, \"reason\": \"Tell user about the smoothie bar\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$GYM_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$GYM_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to the gym\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'gym', 'location': None, 'search_range': 10}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"gym\", \"location\": null, \"search_range\": 10}, \"memory\": \"GYM_RESULT\", \"reason\": \"Find gym in 10 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the address of the closest gym from output', 'json_object': '$GYM_RESULT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the closest gym from output\", \"json_object\": \"$GYM_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GYM_ADDRESS\", \"reason\": \"Get the address of the gym\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$GYM_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$GYM_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to the gym\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'smoothie bar', 'location': '$GYM_ADDRESS$', 'search_range': 10}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"smoothie bar\", \"location\": \"$GYM_ADDRESS$\", \"search_range\": 10}, \"memory\": \"SMOOTHIE_BAR\", \"reason\": \"Find smoothie bar near gym\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user about the closest smoothie bar from JSON object or report none is available', 'data': '$SMOOTHIE_BAR$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about the closest smoothie bar from JSON object or report none is available\", \"data\": \"$SMOOTHIE_BAR$\"}, \"memory\": null, \"reason\": \"Tell user about the smoothie bar\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': 'Center city Rome Italy'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"Center city Rome Italy\"}, \"memory\": \"WEATHER_REPORT\", \"reason\": \"Get weather report for Rome\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Explain to the user the current weather in Rome', 'data': '$WEATHER_REPORT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain to the user the current weather in Rome\", \"data\": \"$WEATHER_REPORT$\"}, \"memory\": null, \"reason\": \"Tell user about the weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Invent a spotify search that matches the mood in the following weather report. Be creative, use 3-5 words.', 'json_object': '$WEATHER_REPORT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Invent a spotify search that matches the mood in the following weather report. Be creative, use 3-5 words.\", \"json_object\": \"$WEATHER_REPORT$\", \"return_type\": \"string\"}, \"memory\": \"WEATHER_QUERY\", \"reason\": \"Invent a Spotify search based on weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': '$WEATHER_QUERY$', 'types': ['album', 'playlist', 'track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"$WEATHER_QUERY$\", \"types\": [\"album\", \"playlist\", \"track\"]}, \"memory\": \"MEDIA_WEATHER\", \"reason\": \"Search for music based on weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get media object from JSON object that best matches query $WEATHER_QUERY$', 'json_object': '$MEDIA_WEATHER$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get media object from JSON object that best matches query $WEATHER_QUERY$\", \"json_object\": \"$MEDIA_WEATHER$\", \"return_type\": \"object\"}, \"memory\": \"WHAT_PLAY\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$WHAT_PLAY$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$WHAT_PLAY$\"}, \"memory\": null, \"reason\": \"Enqueue the music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': 'Center city Rome Italy'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"Center city Rome Italy\"}, \"memory\": \"WEATHER_REPORT\", \"reason\": \"Get weather report for Rome\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Invent a spotify search that matches the mood in the following weather report', 'json_object': '$WEATHER_REPORT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Invent a spotify search that matches the mood in the following weather report\", \"json_object\": \"$WEATHER_REPORT$\", \"return_type\": \"string\"}, \"memory\": \"WEATHER_QUERY\", \"reason\": \"Invent a Spotify search based on weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': '$WEATHER_QUERY$', 'types': ['album', 'playlist', 'track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"$WEATHER_QUERY$\", \"types\": [\"album\", \"playlist\", \"track\"]}, \"memory\": \"MEDIA_WEATHER\", \"reason\": \"Search for music based on weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get media object from JSON object that best matches query $WEATHER_QUERY$', 'json_object': '$MEDIA_WEATHER$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get media object from JSON object that best matches query $WEATHER_QUERY$\", \"json_object\": \"$MEDIA_WEATHER$\", \"return_type\": \"object\"}, \"memory\": \"WHAT_PLAY\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Explain to the user the current weather in Rome', 'data': '$WEATHER_REPORT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain to the user the current weather in Rome\", \"data\": \"$WEATHER_REPORT$\"}, \"memory\": null, \"reason\": \"Tell user about the weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$WHAT_PLAY$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$WHAT_PLAY$\"}, \"memory\": null, \"reason\": \"Enqueue the music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': 'Center city Rome Italy'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"Center city Rome Italy\"}, \"memory\": \"WEATHER_REPORT\", \"reason\": \"Get weather report for Rome\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Describe the following weather report as a Spotify search that fits the mood', 'json_object': '$WEATHER_REPORT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Describe the following weather report as a Spotify search that fits the mood\", \"json_object\": \"$WEATHER_REPORT$\", \"return_type\": \"string\"}, \"memory\": \"WEATHER_QUERY\", \"reason\": \"Invent a Spotify search based on weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Explain to the user the current weather in Rome', 'data': '$WEATHER_REPORT$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain to the user the current weather in Rome\", \"data\": \"$WEATHER_REPORT$\"}, \"memory\": null, \"reason\": \"Tell user about the weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': '$WEATHER_QUERY$', 'types': ['album', 'playlist', 'track']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"$WEATHER_QUERY$\", \"types\": [\"album\", \"playlist\", \"track\"]}, \"memory\": \"MEDIA_WEATHER\", \"reason\": \"Search for music based on weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get media object from JSON object that best matches query $WEATHER_QUERY$', 'json_object': '$MEDIA_WEATHER$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get media object from JSON object that best matches query $WEATHER_QUERY$\", \"json_object\": \"$MEDIA_WEATHER$\", \"return_type\": \"object\"}, \"memory\": \"WHAT_PLAY\", \"reason\": \"Select a single media object to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$WHAT_PLAY$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$WHAT_PLAY$\"}, \"memory\": null, \"reason\": \"Enqueue the music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'art gallery', 'location': None, 'search_range': 30}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"art gallery\", \"location\": null, \"search_range\": 30}, \"memory\": \"SEARCH_RESULT\", \"reason\": \"Find art gallery in 30 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the address of the closest art gallery', 'json_object': '$SEARCH_RESULT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the address of the closest art gallery\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GALLERY_ADDRESS\", \"reason\": \"Get the address of the gallery\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Get the name of the closest art gallery', 'json_object': '$SEARCH_RESULT$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Get the name of the closest art gallery\", \"json_object\": \"$SEARCH_RESULT$\", \"return_type\": \"string\"}, \"memory\": \"GALLERY_NAME\", \"reason\": \"Get the name of the gallery\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'art galleries at $GALLERY_NAME$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"art galleries at $GALLERY_NAME$\"}, \"memory\": \"INTERNET_SEARCH\", \"reason\": \"Search for art galleries\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user about the current art galleries or report none were found', 'data': '$INTERNET_SEARCH$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about the current art galleries or report none were found\", \"data\": \"$INTERNET_SEARCH$\"}, \"memory\": null, \"reason\": \"Tell user about the art galleries\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$GALLERY_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$GALLERY_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to the gallery\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'Stadium', 'location': None, 'search_range': 30}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium\", \"location\": null, \"search_range\": 30}, \"memory\": \"STADIUM_LIST\", \"reason\": \"Find stadium in 30 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return address of the most important stadium from JSON list', 'json_object': '$STADIUM_LIST$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return address of the most important stadium from JSON list\", \"json_object\": \"$STADIUM_LIST$\", \"return_type\": \"object\"}, \"memory\": \"BEST_STADIUM_ADDRESS\", \"reason\": \"Get the address of the stadium\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$BEST_STADIUM_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$BEST_STADIUM_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to the stadium\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'Stadium merchandise store', 'location': '$BEST_STADIUM_ADDRESS$', 'search_range': 2}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium merchandise store\", \"location\": \"$BEST_STADIUM_ADDRESS$\", \"search_range\": 2}, \"memory\": \"MERCHANDISE\", \"reason\": \"Find merchandise store near stadium\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell the user if the merchandise store is open given a JSON description', 'data': '$MERCHANDISE$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user if the merchandise store is open given a JSON description\", \"data\": \"$MERCHANDISE$\"}, \"memory\": null, \"reason\": \"Tell user about the store\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'Stadium', 'location': None, 'search_range': 30}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium\", \"location\": null, \"search_range\": 30}, \"memory\": \"STADIUM_LIST\", \"reason\": \"Find stadium in 30 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return address of the most important stadium from JSON list', 'json_object': '$STADIUM_LIST$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return address of the most important stadium from JSON list\", \"json_object\": \"$STADIUM_LIST$\", \"return_type\": \"object\"}, \"memory\": \"BEST_STADIUM_ADDRESS\", \"reason\": \"Get the address of the stadium\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'Stadium merchandise store', 'location': '$BEST_STADIUM_ADDRESS$', 'search_range': 2}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"Stadium merchandise store\", \"location\": \"$BEST_STADIUM_ADDRESS$\", \"search_range\": 2}, \"memory\": \"MERCHANDISE\", \"reason\": \"Find merchandise store near stadium\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$BEST_STADIUM_ADDRESS$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$BEST_STADIUM_ADDRESS$\"]}, \"memory\": null, \"reason\": \"Navigate to the stadium\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell the user if the merchandise store is open given a JSON description', 'data': '$MERCHANDISE$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell the user if the merchandise store is open given a JSON description\", \"data\": \"$MERCHANDISE$\"}, \"memory\": null, \"reason\": \"Tell user about the store\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_driving_mode with args {'driving_mode': 'EFFICIENT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"EFFICIENT\"}, \"memory\": null, \"reason\": \"Set the car in eco mode\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_driving_mode with args {'driving_mode': 'SPORT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null, \"reason\": \"Set the car in sport mode\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'DRIVER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}, \"memory\": null, \"reason\": \"Set driver temperature to 25\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'PASSENGER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}, \"memory\": null, \"reason\": \"Set copilot temperature to 25\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_driving_mode with args {'driving_mode': 'SPORT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null, \"reason\": \"Set the car in sport mode\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'PASSENGER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}, \"memory\": null}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'DRIVER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}, \"memory\": null, \"reason\": \"Set driver temperature to 25\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'PASSENGER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}, \"memory\": null, \"reason\": \"Set copilot temperature to 25\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'DRIVER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}, \"memory\": null, \"reason\": \"Set driver temperature to 25\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_driving_mode with args {'driving_mode': 'SPORT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null, \"reason\": \"Set the car in sport mode\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'DRIVER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"DRIVER\"}, \"memory\": null, \"reason\": \"Set driver temperature to 25\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_driving_mode with args {'driving_mode': 'SPORT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_driving_mode\", \"args\": {\"driving_mode\": \"SPORT\"}, \"memory\": null, \"reason\": \"Set the car in sport mode\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 25, 'seatzone': 'PASSENGER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 25, \"seatzone\": \"PASSENGER\"}, \"memory\": null, \"reason\": \"Set copilot temperature to 25\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_window with args {'window_level': 100, 'what_window': 'DRIVER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 100, \"what_window\": \"DRIVER\"}, \"memory\": null, \"reason\": \"Open driver window fully\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_window with args {'window_level': 0, 'what_window': 'DRIVER'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 0, \"what_window\": \"DRIVER\"}, \"memory\": null, \"reason\": \"Close driver window fully\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_window with args {'window_level': 20, 'what_window': 'RIGHT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 20, \"what_window\": \"RIGHT\"}, \"memory\": null, \"reason\": \"Open right back window a bit\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_window with args {'window_level': 0, 'what_window': 'RIGHT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 0, \"what_window\": \"RIGHT\"}, \"memory\": null, \"reason\": \"Close right back window\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_window with args {'window_level': 0, 'what_window': 'LEFT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 0, \"what_window\": \"LEFT\"}, \"memory\": null, \"reason\": \"Close left back window\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_current_date with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_current_date\", \"args\": null, \"memory\": \"CURRENT_DATE\", \"reason\": \"Get the current date\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Explain user why BMW is a good car brand', 'data': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Explain user why BMW is a good car brand\", \"data\": null}, \"memory\": null, \"reason\": \"Explain why BMW is a good car brand as it is not monday outside\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"WEATHER_REPORT\", \"reason\": \"Get the weather report\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_current_date with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_current_date\", \"args\": null, \"memory\": \"CURRENT_DATE\", \"reason\": \"Get the current date\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 22, 'seatzone': 'LEFT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"LEFT\"}, \"memory\": null, \"reason\": \"Set the temperature for the left back seat to 22\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 22, 'seatzone': 'RIGHT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"RIGHT\"}, \"memory\": null, \"reason\": \"Set the temperature for the right back seat to 22\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'popular indie music', 'types': ['playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"popular indie music\", \"types\": [\"playlist\"]}, \"memory\": \"THE\", \"reason\": \"Search for popular indie music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Select any playlist from given JSON object', 'json_object': '$THE$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select any playlist from given JSON object\", \"json_object\": \"$THE$\", \"return_type\": \"object\"}, \"memory\": \"O\", \"reason\": \"Select a playlist to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$O$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$O$\"}, \"memory\": null, \"reason\": \"Enqueue the music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Select best ambient light colour to listen to indie music from choices bellow', 'json_object': ['beige', 'blue', 'cyan', 'green', 'orange', 'red', 'white', 'yellow'], 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select best ambient light colour to listen to indie music from choices bellow\", \"json_object\": [\"beige\", \"blue\", \"cyan\", \"green\", \"orange\", \"red\", \"white\", \"yellow\"], \"return_type\": \"string\"}, \"memory\": \"C\", \"reason\": \"Select the best ambient light colour\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_ambient_light with args {'light_color': '$C$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"$C$\"}, \"memory\": null, \"reason\": \"Set the ambient light to the selected colour\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 22, 'seatzone': 'LEFT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"LEFT\"}, \"memory\": null, \"reason\": \"Set the temperature for the left back seat to 22\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_temperature with args {'temperature': 22, 'seatzone': 'RIGHT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_temperature\", \"args\": {\"temperature\": 22, \"seatzone\": \"RIGHT\"}, \"memory\": null, \"reason\": \"Set the temperature for the right back seat to 22\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_search with args {'query': 'popular indie music', 'types': ['playlist']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_search\", \"args\": {\"query\": \"popular indie music\", \"types\": [\"playlist\"]}, \"memory\": \"THE\", \"reason\": \"Search for popular indie music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Select any playlist from given JSON object', 'json_object': '$THE$', 'return_type': 'object'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select any playlist from given JSON object\", \"json_object\": \"$THE$\", \"return_type\": \"object\"}, \"memory\": \"O\", \"reason\": \"Select a playlist to be played\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Select best ambient light colour to listen to indie music from choices bellow', 'json_object': ['beige', 'blue', 'cyan', 'green', 'orange', 'red', 'white', 'yellow'], 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Select best ambient light colour to listen to indie music from choices bellow\", \"json_object\": [\"beige\", \"blue\", \"cyan\", \"green\", \"orange\", \"red\", \"white\", \"yellow\"], \"return_type\": \"string\"}, \"memory\": \"C\", \"reason\": \"Select the best ambient light colour\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_ambient_light with args {'light_color': '$C$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_ambient_light\", \"args\": {\"light_color\": \"$C$\"}, \"memory\": null, \"reason\": \"Set the ambient light to the selected colour\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_enqueue with args {'media_object': '$O$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_enqueue\", \"args\": {\"media_object\": \"$O$\"}, \"memory\": null, \"reason\": \"Enqueue the music\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"U\", \"reason\": \"Get the weather report\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"O\", \"reason\": \"Get the car state\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Return interior temperature as int', 'json_object': '$O$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Return interior temperature as int\", \"json_object\": \"$O$\", \"return_type\": \"string\"}, \"memory\": \"$T$\", \"reason\": \"Get the interior temperature\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"O\", \"reason\": \"Get the car state\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"U\", \"reason\": \"Get the weather report\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_window with args {'window_level': 50, 'what_window': 'ALL'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_window\", \"args\": {\"window_level\": 50, \"what_window\": \"ALL\"}, \"memory\": null, \"reason\": \"Open the windows\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function get_car_state with args None?"}, {"role": "assistant", "content": "{\"tool_name\": \"get_car_state\", \"args\": null, \"memory\": \"S\", \"reason\": \"Get the car state\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user whether the windows are open given car state. Larger than 0 means open. Car state:\\n', 'data': '$S$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user whether the windows are open given car state. Larger than 0 means open. Car state:\\n\", \"data\": \"$S$\"}, \"memory\": null, \"reason\": \"Tell user about the windows\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': 'rome city'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"rome city\"}, \"memory\": \"A\", \"reason\": \"Get the weather report\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Respond to user whether it is sunny in Rome', 'data': '$A$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Respond to user whether it is sunny in Rome\", \"data\": \"$A$\"}, \"memory\": null, \"reason\": \"Tell user about the weather\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': 'madrid city'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"madrid city\"}, \"memory\": \"TR\", \"reason\": \"Get the weather report\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': 'madrid city'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": \"madrid city\"}, \"memory\": \"TR\", \"reason\": \"Get the weather report\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'what is wikipedia?'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is wikipedia?\"}, \"memory\": \"W\", \"reason\": \"Search for wikipedia\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'explain user what wikipedia is', 'data': '$W$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"explain user what wikipedia is\", \"data\": \"$W$\"}, \"memory\": null, \"reason\": \"Tell user about wikipedia\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'what is philosophy?'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is philosophy?\"}, \"memory\": \"W\", \"reason\": \"Search for philosophy\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'explain user what philosophy is', 'data': '$W$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"explain user what philosophy is\", \"data\": \"$W$\"}, \"memory\": null, \"reason\": \"Tell user about philosophy\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'vegan restaurants', 'location': None, 'search_range': 10}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"vegan restaurants\", \"location\": null, \"search_range\": 10}, \"memory\": \"SR\", \"reason\": \"Find vegan restaurants in 10 km range\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'Choose the address of the cheapest vegan restaurant and return it from JSON object', 'json_object': '$SR$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"Choose the address of the cheapest vegan restaurant and return it from JSON object\", \"json_object\": \"$SR$\", \"return_type\": \"string\"}, \"memory\": \"X\", \"reason\": \"Get the address of the cheapest vegan restaurant\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$X$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$X$\"]}, \"memory\": null, \"reason\": \"Navigate to the restaurant\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_volume with args {'volume': 10}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_volume\", \"args\": {\"volume\": 10}, \"memory\": null, \"reason\": \"Mute the volume\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function query_to_place with args {'query': 'berlin city'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"query_to_place\", \"args\": {\"query\": \"berlin city\"}, \"memory\": \"N\", \"reason\": \"Get the address of Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'get address from object and return it', 'json_object': '$N$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"get address from object and return it\", \"json_object\": \"$N$\", \"return_type\": \"string\"}, \"memory\": \"N_ADDR\", \"reason\": \"Get the address of Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$N_ADDR$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$N_ADDR$\"]}, \"memory\": null, \"reason\": \"Navigate to Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'cafe', 'location': '$N_ADDR$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"cafe\", \"location\": \"$N_ADDR$\"}, \"memory\": \"WHAT\", \"reason\": \"Find cafe in Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user about found cafes in Berlin', 'data': '$WHAT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about found cafes in Berlin\", \"data\": \"$WHAT\"}, \"memory\": null, \"reason\": \"Tell user about the cafe\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function query_to_place with args {'query': 'berlin city'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"query_to_place\", \"args\": {\"query\": \"berlin city\"}, \"memory\": \"N\", \"reason\": \"Get the address of Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function llm_parse_json with args {'query': 'get address from object and return it', 'json_object': '$N$', 'return_type': 'string'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"llm_parse_json\", \"args\": {\"query\": \"get address from object and return it\", \"json_object\": \"$N$\", \"return_type\": \"string\"}, \"memory\": \"N_ADDR\", \"reason\": \"Get the address of Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function places_tool with args {'query': 'cafe', 'location': '$N_ADDR$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"places_tool\", \"args\": {\"query\": \"cafe\", \"location\": \"$N_ADDR$\"}, \"memory\": \"WHAT\", \"reason\": \"Find cafe in Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user about found cafes in Berlin', 'data': '$WHAT'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user about found cafes in Berlin\", \"data\": \"$WHAT\"}, \"memory\": null, \"reason\": \"Tell user about the cafe\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function set_navigation with args {'waypoints': ['$N_ADDR$']}?"}, {"role": "assistant", "content": "{\"tool_name\": \"set_navigation\", \"args\": {\"waypoints\": [\"$N_ADDR$\"]}, \"memory\": null, \"reason\": \"Navigate to Berlin\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'what is best cafe in Rome?'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is best cafe in Rome?\"}, \"memory\": \"BCRJ\", \"reason\": \"Search for best cafe in Rome\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user what seems be best cafe in Rome', 'data': '$BCRJ$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user what seems be best cafe in Rome\", \"data\": \"$BCRJ$\"}, \"memory\": null, \"reason\": \"Tell user about the cafe\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_volume with args {'volume': 20}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_volume\", \"args\": {\"volume\": 20}, \"memory\": null, \"reason\": \"Lower the volume\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function search_internet with args {'query': 'what is best cafe in Rome?'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"search_internet\", \"args\": {\"query\": \"what is best cafe in Rome?\"}, \"memory\": \"BCRJ\", \"reason\": \"Search for best cafe in Rome\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function media_control_volume with args {'volume': 20}?"}, {"role": "assistant", "content": "{\"tool_name\": \"media_control_volume\", \"args\": {\"volume\": 20}, \"memory\": null, \"reason\": \"Lower the volume\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function speak_user with args {'query': 'Tell user what seems be best cafe in Rome', 'data': '$BCRJ$'}?"}, {"role": "assistant", "content": "{\"tool_name\": \"speak_user\", \"args\": {\"query\": \"Tell user what seems be best cafe in Rome\", \"data\": \"$BCRJ$\"}, \"memory\": null, \"reason\": \"Tell user about the cafe\"}"}]}
{"messages": [{"role": "system", "content": "You are a car assistant, using tools to satisfy a user query. The tools you have available are:\n[\n {\n  \"name\": \"set_temperature\",\n  \"role\": \"consumer\",\n  \"description\": \"Set temperature in car cockpit for each passenger individually\",\n  \"args\": {\n   \"temperature\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 18,\n    \"max\": 25\n   },\n   \"seatzone\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_window\",\n  \"role\": \"consumer\",\n  \"description\": \"Control car windows for each passenger individually\",\n  \"args\": {\n   \"window_level\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is fully open, 0 fully closed\"\n   },\n   \"what_window\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"all\",\n     \"driver\",\n     \"left\",\n     \"passenger\",\n     \"right\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_ambient_light\",\n  \"role\": \"consumer\",\n  \"description\": \"Set ambient light in car cockpit\",\n  \"args\": {\n   \"light_color\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"beige\",\n     \"blue\",\n     \"cyan\",\n     \"green\",\n     \"orange\",\n     \"red\",\n     \"white\",\n     \"yellow\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"set_driving_mode\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car driving mode\",\n  \"args\": {\n   \"driving_mode\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"personal\",\n     \"sport\",\n     \"efficient\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"send_text\",\n  \"role\": \"consumer\",\n  \"description\": \"Send message to a person in agenda\",\n  \"args\": {\n   \"who\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"what\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_play\",\n  \"role\": \"consumer\",\n  \"description\": \"Pauses or resumes media system playingA media object should be selected first through media_control_enqueue\",\n  \"args\": {\n   \"playing\": {\n    \"required\": true,\n    \"type\": \"boolean\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_enqueue\",\n  \"role\": \"consumer\",\n  \"description\": \"Play audio in car system. Use with media_search returns.\",\n  \"args\": {\n   \"media_object\": {\n    \"required\": true,\n    \"type\": \"object\"\n   }\n  }\n },\n {\n  \"name\": \"media_control_volume\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car media volume\",\n  \"args\": {\n   \"volume\": {\n    \"required\": true,\n    \"type\": \"integer\",\n    \"min\": 0,\n    \"max\": 100,\n    \"description\": \"100 is max, 0 is mute\"\n   }\n  }\n },\n {\n  \"name\": \"get_current_date\",\n  \"role\": \"producer\",\n  \"description\": \"Return current datetime of the car\",\n  \"args\": null\n },\n {\n  \"name\": \"places_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Returns goegraphical points of interest. Information can be extracted using llm_parse_json tool. Maximum search range is 50 kilometers, but relevant results outside might be returned by the API.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"location\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"Constrains searching only for place around given address. Uses current car location if null\"\n   },\n   \"search_range\": {\n    \"required\": false,\n    \"type\": \"integer\",\n    \"description\": \"Search range in kilometres. Default 20, maximum 50\"\n   }\n  }\n },\n {\n  \"name\": \"search_internet\",\n  \"role\": \"producer\",\n  \"description\": \"Search the internet for information\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to search\"\n   }\n  }\n },\n {\n  \"name\": \"speak_user\",\n  \"role\": \"consumer\",\n  \"description\": \"Speak to driver. Only use if the user explicitly demands information from you.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What to do with data\"\n   },\n   \"data\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"description\": \"Data to interpet for the user. Can be null if query needs no data\"\n   }\n  }\n },\n {\n  \"name\": \"set_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Set car navaigation to one or more waypoints. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"add_navigation\",\n  \"role\": \"consumer\",\n  \"description\": \"Add new waypoints to car navigation at the end. Returns ETAs to each of them from current location\",\n  \"args\": {\n   \"waypoints\": {\n    \"required\": true,\n    \"type\": \"list[string]\",\n    \"description\": \"lists of addresses\"\n   }\n  }\n },\n {\n  \"name\": \"get_car_state\",\n  \"role\": \"producer\",\n  \"description\": \"Get current car state\",\n  \"args\": null\n },\n {\n  \"name\": \"query_to_place\",\n  \"role\": \"producer\",\n  \"description\": \"Translate query to geocoordinates. Return lat, lng and address.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"weather_tool\",\n  \"role\": \"producer\",\n  \"description\": \"Get weather for location\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n },\n {\n  \"name\": \"llm_parse_json\",\n  \"role\": \"logic\",\n  \"description\": \"Extract information from another tool output\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"description\": \"What data to extract from provided data\"\n   },\n   \"json_object\": {\n    \"required\": true,\n    \"type\": \"object\",\n    \"description\": \"Data to apply query on\"\n   },\n   \"return_type\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"json\",\n     \"string\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"media_search\",\n  \"role\": \"producer\",\n  \"description\": \"Search audiobooks, songs, albums, etc.\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   },\n   \"types\": {\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n     \"album\",\n     \"artist\",\n     \"playlist\",\n     \"track\",\n     \"show\",\n     \"episode\",\n     \"audiobook\"\n    ]\n   }\n  }\n },\n {\n  \"name\": \"truthy\",\n  \"role\": \"\",\n  \"description\": \"Decide if the answer to a query is true or false\",\n  \"args\": {\n   \"query\": {\n    \"required\": true,\n    \"type\": \"string\"\n   }\n  }\n }\n]\nTool calls are represented as JSON objects. Results stored in memory can be called using the pattern $NAME_OF_MEMORY$ anywhere in other function arguments and the stored value will be used instead of the placeholder. You will give a reason why each tool call was made under the reason field"}, {"role": "user", "content": "How do you call function weather_tool with args {'query': None}?"}, {"role": "assistant", "content": "{\"tool_name\": \"weather_tool\", \"args\": {\"query\": null}, \"memory\": \"WEATHER\", \"reason\": \"Get the weather report\"}"}]}
