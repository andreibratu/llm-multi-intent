[
   {
      "instruction": "Play the latest local news and set the cabin temperature to 25 degrees.",
      "instances": [
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get city from current car address",
                  "json_object": "$CAR_STATE$",
                  "return_type": "string"
               },
               "memory": "CAR_ADDRESS"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "News for $CAR_ADDRESS$"
               },
               "memory": "NEWS_RESULT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Create a news bulleting for user given data",
                  "data": "$NEWS_RESULT$"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "ALL"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "ALL"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get current city from current car address",
                  "json_object": "$CAR_STATE$",
                  "return_type": "string"
               },
               "memory": "CAR_ADDRESS"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "News for $CAR_ADDRESS$"
               },
               "memory": "NEWS_RESULT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Summarize news for user from data",
                  "data": "$NEWS_RESULT$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "ALL"
               },
               "memory": null
            },
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get current city from current car address",
                  "json_object": "$CAR_STATE$",
                  "return_type": "string"
               },
               "memory": "CAR_ADDRESS"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "News for $CAR_ADDRESS$"
               },
               "memory": "NEWS_RESULT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Summarize news for user from data",
                  "data": "$NEWS_RESULT$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Set navigation to Knorstrasse 148 and contact Jeremy about my ETA",
      "instances": [
         [
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "Knorstrasse 148"
                  ]
               },
               "memory": "NAVIGATION_OUTPUT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Extract ETA from json object",
                  "json_object": "$NAVIGATION_OUTPUT$",
                  "return_type": "string"
               },
               "memory": "ETA"
            },
            {
               "tool_name": "send_text",
               "args": {
                  "who": "Jeremy",
                  "what": "I am arriving to Knorstrasse 148 in $ETA$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Set navigation to home and contact Elizabeth about my ETA",
      "instances": [
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Extract home address string from car state json object. ",
                  "json_object": "$CAR_STATE$",
                  "return_type": "string"
               },
               "memory": "HOME_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$HOME_ADDRESS$"
                  ]
               },
               "memory": "NAVIGATION_OUTPUT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Extract ETA from json object",
                  "json_object": "$NAVIGATION_OUTPUT$",
                  "return_type": "string"
               },
               "memory": "ETA"
            },
            {
               "tool_name": "send_text",
               "args": {
                  "who": "Elizabeth",
                  "what": "I am arriving home in $ETA$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Switch to sports and play my workout playlist",
      "instances": [
         [
            {
               "tool_name": "set_driving_mode",
               "args": {
                  "driving_mode": "SPORT"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "workout playlist",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "SEARCH_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the media object nested in this json object",
                  "json_object": "$SEARCH_RESULT$",
                  "return_type": "object"
               },
               "memory": "PLAYLIST"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$PLAYLIST$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "workout playlist",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "SEARCH_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the media object nested in this json object",
                  "json_object": "$SEARCH_RESULT$",
                  "return_type": "object"
               },
               "memory": "PLAYLIST"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$PLAYLIST$"
               },
               "memory": null
            },
            {
               "tool_name": "set_driving_mode",
               "args": {
                  "driving_mode": "SPORT"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Set cabin temperature to 25 degrees celsius and find the closest Italian restaurant",
      "instances": [
         [
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "ALL"
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "italian restaurants",
                  "location": null,
                  "search_range": null
               },
               "memory": "SEARCH_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the closest restaurant by distance",
                  "json_object": "$SEARCH_RESULT$",
                  "return_type": "object"
               },
               "memory": "RESTAURANT_RESULT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Describe to user this restaurant",
                  "data": "$RESTAURANT_RESULT$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "italian restaurants",
                  "location": null,
                  "search_range": null
               },
               "memory": "SEARCH_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the closest restaurant by distance",
                  "json_object": "$SEARCH_RESULT$",
                  "return_type": "object"
               },
               "memory": "RESTAURANT_RESULT"
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "ALL"
               },
               "memory": null
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Describe to user this restaurant",
                  "data": "$RESTAURANT_RESULT$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "italian restaurants",
                  "location": null,
                  "search_range": null
               },
               "memory": "SEARCH_RESULT"
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "ALL"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the closest restaurant by distance",
                  "json_object": "$SEARCH_RESULT$",
                  "return_type": "object"
               },
               "memory": "RESTAURANT_RESULT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Describe to user this restaurant",
                  "data": "$RESTAURANT_RESULT$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Resume playing my audiobook, navigate to the nearest EV charging station.",
      "instances": [
         [
            {
               "tool_name": "media_control_play",
               "args": {
                  "playing": true
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "EV charging stations",
                  "location": null,
                  "search_range": null
               },
               "memory": "EV_CHARGE_STATIONS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.",
                  "json_object": "$EV_CHARGE_STATIONS$",
                  "return_type": "string"
               },
               "memory": "EV_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$EV_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "EV charging stations",
                  "location": null,
                  "search_range": null
               },
               "memory": "EV_CHARGE_STATIONS"
            },
            {
               "tool_name": "media_control_play",
               "args": {
                  "playing": true
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.",
                  "json_object": "$EV_CHARGE_STATIONS$",
                  "return_type": "string"
               },
               "memory": "EV_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$EV_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "EV charging stations",
                  "location": null,
                  "search_range": null
               },
               "memory": "EV_CHARGE_STATIONS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.",
                  "json_object": "$EV_CHARGE_STATIONS$",
                  "return_type": "string"
               },
               "memory": "EV_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$EV_ADDRESS$"
                  ]
               },
               "memory": null
            },
            {
               "tool_name": "media_control_play",
               "args": {
                  "playing": true
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "EV charging stations",
                  "location": null,
                  "search_range": null
               },
               "memory": "EV_CHARGE_STATIONS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Find address of closest EV charging station. It should be under a formattedAddress or address property in the JSON object.",
                  "json_object": "$EV_CHARGE_STATIONS$",
                  "return_type": "string"
               },
               "memory": "EV_ADDRESS"
            },
            {
               "tool_name": "media_control_play",
               "args": {
                  "playing": true
               },
               "memory": null
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$EV_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Tell me my remaining battery range and suggest attractions or points of interest within that range.",
      "instances": [
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the remaining range of the car from the JSON state",
                  "json_object": "$CAR_STATE$",
                  "return_type": "string"
               },
               "memory": "CAR_RANGE"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "attractions",
                  "location": null,
                  "search_range": 50
               },
               "memory": "POI"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Inform the user about remaining car range",
                  "data": "$CAR_RANGE$"
               },
               "memory": null
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy",
                  "data": "$POI$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the remaining range of the car from the JSON state",
                  "json_object": "$CAR_STATE$",
                  "return_type": "string"
               },
               "memory": "CAR_RANGE"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "points of interest",
                  "location": null,
                  "search_range": 50
               },
               "memory": "POI"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Pitch places of interest to the tourist user that are in round-trip range with $CAR_RANGE$ autonomy",
                  "data": "$POI$"
               },
               "memory": null
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Inform the user about remaining car range",
                  "data": "$CAR_RANGE$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Recommend a kid-friendly restaurant nearby and play an audiobook for children.",
      "instances": [
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "children audiobook",
                  "types": [
                     "audiobook",
                     "playlist"
                  ]
               },
               "memory": "CHILD_AUDIO"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get a JSON object that seems to be best children audiobook from list",
                  "json_object": "$CHILD_AUDIO$",
                  "return_type": "object"
               },
               "memory": "BEST_CHILD_AUDIO"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "restaurants",
                  "location": null,
                  "search_range": 15
               },
               "memory": "RESTAURANTS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.",
                  "json_object": "$RESTAURANTS$",
                  "return_type": "object"
               },
               "memory": "BEST_RESTAURANT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Describe to the user the restaurant you found or tell them if None matched criteria",
                  "data": "$BEST_RESTAURANT$"
               },
               "memory": null
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$BEST_CHILD_AUDIO$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "restaurants",
                  "location": null,
                  "search_range": 15
               },
               "memory": "RESTAURANTS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.",
                  "json_object": "$RESTAURANTS$",
                  "return_type": "object"
               },
               "memory": "BEST_RESTAURANT"
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "children audiobook",
                  "types": [
                     "audiobook",
                     "playlist"
                  ]
               },
               "memory": "CHILD_AUDIO"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get a JSON object that seems to be best children audiobook from list",
                  "json_object": "$CHILD_AUDIO$",
                  "return_type": "object"
               },
               "memory": "BEST_CHILD_AUDIO"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Describe to the user the restaurant you found or tell them if None matched criteria",
                  "data": "$BEST_RESTAURANT$"
               },
               "memory": null
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$BEST_CHILD_AUDIO$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "children audiobook",
                  "types": [
                     "audiobook",
                     "playlist"
                  ]
               },
               "memory": "CHILD_AUDIO"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "restaurants",
                  "location": null,
                  "search_range": 15
               },
               "memory": "RESTAURANTS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the JSON object from given list that describes most kid friendly restaurant. Return null if no restaurants exist.",
                  "json_object": "$RESTAURANTS$",
                  "return_type": "object"
               },
               "memory": "BEST_RESTAURANT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get a JSON object that seems to be best children audiobook from list",
                  "json_object": "$CHILD_AUDIO$",
                  "return_type": "object"
               },
               "memory": "BEST_CHILD_AUDIO"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Describe to the user the restaurant you found or tell them if None matched criteria",
                  "data": "$BEST_RESTAURANT$"
               },
               "memory": null
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$BEST_CHILD_AUDIO$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Adjust ambient lighting to blue and play something calming.",
      "instances": [
         [
            {
               "tool_name": "set_ambient_light",
               "args": {
                  "light_color": "BLUE"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "calming sounds",
                  "types": [
                     "playlist",
                     "show",
                     "track"
                  ]
               },
               "memory": "MEDIA_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Pick the media JSON object from this list that best fits calming music. Return a single one",
                  "json_object": "MEDIA_RESULT",
                  "return_type": "object"
               },
               "memory": "PARSE_CALM"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$PARSE_CALM$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "calming sounds",
                  "types": [
                     "playlist",
                     "show",
                     "track"
                  ]
               },
               "memory": "MEDIA_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Pick the media JSON object from this list that best fits calming music. Return a single one",
                  "json_object": "MEDIA_RESULT",
                  "return_type": "object"
               },
               "memory": "PARSE_CALM"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$PARSE_CALM$"
               },
               "memory": null
            },
            {
               "tool_name": "set_ambient_light",
               "args": {
                  "light_color": "BLUE"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Play calming music and dim the interior lights. Also, locate a nearby spa.",
      "instances": [
         [
            {
               "tool_name": "set_ambient_light",
               "args": {
                  "light_color": "GREEN"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "calming sounds",
                  "types": [
                     "playlist",
                     "show",
                     "track"
                  ]
               },
               "memory": "MEDIA_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Pick the media JSON object from this list that best fits calming music. Return a single one",
                  "json_object": "MEDIA_RESULT",
                  "return_type": "object"
               },
               "memory": "PARSE_CALM"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "spa",
                  "location": null,
                  "search_range": 15
               },
               "memory": "SPA_RESULTS"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$PARSE_CALM$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the closest spa JSON object from provided JSON list",
                  "json_object": "$SPA_RESULTS$",
                  "return_type": "object"
               },
               "memory": "CLOSEST_SPA"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell the user about the spa they rquested info about",
                  "data": "$CLOSEST_SPA$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "set_ambient_light",
               "args": {
                  "light_color": "GREEN"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "calming sounds",
                  "types": [
                     "playlist",
                     "show",
                     "track"
                  ]
               },
               "memory": "MEDIA_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Pick the media JSON object from this list that best fits calming music. Return a single one",
                  "json_object": "MEDIA_RESULT",
                  "return_type": "object"
               },
               "memory": "PARSE_CALM"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "spa",
                  "location": null,
                  "search_range": 15
               },
               "memory": "SPA_RESULTS"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$PARSE_CALM$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the closest spa JSON object from provided JSON list",
                  "json_object": "$PARSE_CALM$",
                  "return_type": "object"
               },
               "memory": "CLOSEST_SPA"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell the user about the spa they requested info about",
                  "data": "$CLOSEST_SPA$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Begin my evening relaxation playlist and set the navigation for a scenic route that ends home.",
      "instances": [
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get home address from state object",
                  "json_object": "$CAR_STATE$",
                  "return_type": "object"
               },
               "memory": "HOME_ADDRESS"
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "evening relaxation",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "MEDIA_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get a playlist json object out of the provided media object",
                  "json_object": "$MEDIA_RESULT$",
                  "return_type": "object"
               },
               "memory": "NATURE_PLAYLIST"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$NATURE_PLAYLIST$"
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "nature",
                  "location": null,
                  "search_range": 50
               },
               "memory": "NATURE_PLACES"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Identify three closest places and return a JSON list of their addresses",
                  "json_object": "$NATURE_PLACES$",
                  "return_type": "object"
               },
               "memory": "NATURE_ADDRESSES"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$NATURE_ADDRESSES$",
                     "$HOME_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "evening relaxation",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "MEDIA_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get a playlist json object out of the provided media object",
                  "json_object": "$MEDIA_RESULT$",
                  "return_type": "object"
               },
               "memory": "NATURE_PLAYLIST"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$NATURE_PLAYLIST$"
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "nature",
                  "location": null,
                  "search_range": 50
               },
               "memory": "NATURE_PLACES"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Identify three closest places and return a JSON list of their addresseses",
                  "json_object": "$NATURE_PLACES$",
                  "return_type": "object"
               },
               "memory": "NATURE_ADDRESSES"
            },
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get user home address",
                  "json_object": "$CAR_STATE$",
                  "return_type": "object"
               },
               "memory": "HOME_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$NATURE_ADDRESSES$",
                     "$HOME_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "CAR_STATE"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "nature",
                  "location": null,
                  "search_range": 50
               },
               "memory": "NATURE_PLACES"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Identify three closest places and return a flat JSON list of their addresseses and only their addresses",
                  "json_object": "$NATURE_PLACES$",
                  "return_type": "object"
               },
               "memory": "NATURE_ADDRESSES"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": "$NATURE_ADDRESSES$"
               }
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get driver home address",
                  "json_object": "$CAR_STATE$",
                  "return_type": "object"
               },
               "memory": "HOME_ADDRESS"
            },
            {
               "tool_name": "add_navigation",
               "args": {
                  "waypoints": "$HOME_ADDRESS$"
               }
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "evening relaxation",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "MEDIA_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get a playlist json object out of the provided media object",
                  "json_object": "$MEDIA_RESULT$",
                  "return_type": "object"
               },
               "memory": "NATURE_PLAYLIST"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$NATURE_PLAYLIST$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Play the most popular Adele song and give me fun facts about her",
      "instances": [
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "adele",
                  "types": [
                     "track",
                     "artist"
                  ]
               },
               "memory": "ADELE_SONGS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the json object best matching the most popular adele song",
                  "json_object": "$ADELE_SONGS$",
                  "return_type": "object"
               },
               "memory": "ADELE_SONG"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$ADELE_SONG"
               },
               "memory": null
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "fun adele singer facts"
               },
               "memory": "ADELE_FUN_FACTS"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Give user a short summary of best Adele facts",
                  "data": "$ADELE_FUN_FACTS$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "fun adele singer facts"
               },
               "memory": "ADELE_FUN_FACTS"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Give user a short summary of best Adele facts",
                  "data": "$ADELE_FUN_FACTS$"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "adele",
                  "types": [
                     "track",
                     "artist"
                  ]
               },
               "memory": "ADELE_SONGS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the json object best matching the most popular adele song",
                  "json_object": "$ADELE_SONGS$",
                  "return_type": "object"
               },
               "memory": "ADELE_SONG"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$ADELE_SONG"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "fun adele singer facts"
               },
               "memory": "ADELE_FUN_FACTS"
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "adele",
                  "types": [
                     "track",
                     "artist"
                  ]
               },
               "memory": "ADELE_SONGS"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Give user a short summary of best Adele facts",
                  "data": "$ADELE_FUN_FACTS$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the json object best matching the most popular adele song",
                  "json_object": "$ADELE_SONGS$",
                  "return_type": "object"
               },
               "memory": "ADELE_SONG"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$ADELE_SONG"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "adele",
                  "types": [
                     "track",
                     "artist"
                  ]
               },
               "memory": "ADELE_SONGS"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "fun adele singer facts"
               },
               "memory": "ADELE_FUN_FACTS"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Give user a short summary of best Adele facts",
                  "data": "$ADELE_FUN_FACTS$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the json object best matching the most popular adele song",
                  "json_object": "$ADELE_SONGS$",
                  "return_type": "object"
               },
               "memory": "ADELE_SONG"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$ADELE_SONG"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Play the most popular Adele song and tell me when she was born",
      "instances": [
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "adele",
                  "types": [
                     "track",
                     "artist"
                  ]
               },
               "memory": "ADELE_SONGS"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "adele singer birthday"
               },
               "memory": "ADELE_BIRTHDAY"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user birth year of Adele",
                  "data": "$ADELE_BIRTHDAY$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the json object best matching the most popular adele song",
                  "json_object": "$ADELE_SONGS$",
                  "return_type": "object"
               },
               "memory": "ADELE_SONG"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$ADELE_SONG"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "adele",
                  "types": [
                     "track",
                     "artist"
                  ]
               },
               "memory": "ADELE_SONGS"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "adele singer birthday"
               },
               "memory": "ADELE_BIRTHDAY"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the json object best matching the most popular adele song",
                  "json_object": "$ADELE_SONGS$",
                  "return_type": "object"
               },
               "memory": "ADELE_SONG"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user birth year of Adele",
                  "data": "$ADELE_BIRTHDAY$"
               },
               "memory": null
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$ADELE_SONG"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "adele",
                  "types": [
                     "track",
                     "artist"
                  ]
               },
               "memory": "ADELE_SONGS"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "adele singer birthday"
               },
               "memory": "ADELE_BIRTHDAY"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return the json object best matching the most popular adele song",
                  "json_object": "$ADELE_SONGS$",
                  "return_type": "object"
               },
               "memory": "ADELE_SONG"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$ADELE_SONG"
               },
               "memory": null
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user birth year of Adele",
                  "data": "$ADELE_BIRTHDAY$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Navigate to a film studio and tell me facts about it",
      "instances": [
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "film studio",
                  "location": null,
                  "search_range": 50
               },
               "memory": "STUDIO_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get title of studio",
                  "json_object": "$STUDIO_RESULT$",
                  "return_type": "string"
               },
               "memory": "STUDIO_NAME"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "facts about film studio $STUDIO_NAME$"
               },
               "memory": "SEARCH_RESULT_INTERNET"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user the facts about movie studio",
                  "data": "$SEARCH_RESULT_INTERNET$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get address of the studio",
                  "json_object": "$STUDIO_RESULT$",
                  "return_type": "string"
               },
               "memory": "STUDIO_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$STUDIO_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Play Beethoven's Symphony from and give a brief about his life.",
      "instances": [
         [
            {
               "tool_name": "media_search",
               "args": {
                  "query": "beethoven symphony",
                  "types": [
                     "track"
                  ]
               },
               "memory": "SYMPHONY"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "Beethoven interesting facts"
               },
               "memory": "FUN_FACTS"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user facts about beethoven given source",
                  "data": "$FUN_FACTS"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Find the nearest gym, then locate a smoothie bar close to it.",
      "instances": [
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "gym",
                  "location": null,
                  "search_range": 10
               },
               "memory": "GYM_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the address of the closest gym from output",
                  "json_object": "$GYM_RESULT$",
                  "return_type": "string"
               },
               "memory": "GYM_ADDRESS"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "smoothie bar",
                  "location": "$GYM_ADDRESS$",
                  "search_range": 10
               },
               "memory": "SMOOTHIE_BAR"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user about the closest smoothie bar from JSON object or report none is available",
                  "data": "$SMOOTHIE_BAR$"
               },
               "memory": null
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$GYM_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "gym",
                  "location": null,
                  "search_range": 10
               },
               "memory": "GYM_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the address of the closest gym from output",
                  "json_object": "$GYM_RESULT$",
                  "return_type": "string"
               },
               "memory": "GYM_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$GYM_ADDRESS$"
                  ]
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "smoothie bar",
                  "location": "$GYM_ADDRESS$",
                  "search_range": 10
               },
               "memory": "SMOOTHIE_BAR"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user about the closest smoothie bar from JSON object or report none is available",
                  "data": "$SMOOTHIE_BAR$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "gym",
                  "location": null,
                  "search_range": 10
               },
               "memory": "GYM_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the address of the closest gym from output",
                  "json_object": "$GYM_RESULT$",
                  "return_type": "string"
               },
               "memory": "GYM_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$GYM_ADDRESS$"
                  ]
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "smoothie bar",
                  "location": "$GYM_ADDRESS$",
                  "search_range": 10
               },
               "memory": "SMOOTHIE_BAR"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user about the closest smoothie bar from JSON object or report none is available",
                  "data": "$SMOOTHIE_BAR$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "What's the weather like at Rome? Also, start playing a playlist suitable for that.",
      "instances": [
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": "Center city Rome Italy"
               },
               "memory": "WEATHER_REPORT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Explain to the user the current weather in Rome",
                  "data": "$WEATHER_REPORT$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Invent a spotify search that matches the mood in the following weather report. Be creative, use 3-5 words.",
                  "json_object": "$WEATHER_REPORT$",
                  "return_type": "string"
               },
               "memory": "WEATHER_QUERY"
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "$WEATHER_QUERY$",
                  "types": [
                     "album",
                     "playlist",
                     "track"
                  ]
               },
               "memory": "MEDIA_WEATHER"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get media object from JSON object that best matches query $WEATHER_QUERY$",
                  "json_object": "$MEDIA_WEATHER$",
                  "return_type": "object"
               },
               "memory": "WHAT_PLAY"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$WHAT_PLAY$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": "Center city Rome Italy"
               },
               "memory": "WEATHER_REPORT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Invent a spotify search that matches the mood in the following weather report",
                  "json_object": "$WEATHER_REPORT$",
                  "return_type": "string"
               },
               "memory": "WEATHER_QUERY"
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "$WEATHER_QUERY$",
                  "types": [
                     "album",
                     "playlist",
                     "track"
                  ]
               },
               "memory": "MEDIA_WEATHER"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get media object from JSON object that best matches query $WEATHER_QUERY$",
                  "json_object": "$MEDIA_WEATHER$",
                  "return_type": "object"
               },
               "memory": "WHAT_PLAY"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Explain to the user the current weather in Rome",
                  "data": "$WEATHER_REPORT$"
               },
               "memory": null
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$WHAT_PLAY$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": "Center city Rome Italy"
               },
               "memory": "WEATHER_REPORT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Describe the following weather report as a Spotify search that fits the mood",
                  "json_object": "$WEATHER_REPORT$",
                  "return_type": "string"
               },
               "memory": "WEATHER_QUERY"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Explain to the user the current weather in Rome",
                  "data": "$WEATHER_REPORT$"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "$WEATHER_QUERY$",
                  "types": [
                     "album",
                     "playlist",
                     "track"
                  ]
               },
               "memory": "MEDIA_WEATHER"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get media object from JSON object that best matches query $WEATHER_QUERY$",
                  "json_object": "$MEDIA_WEATHER$",
                  "return_type": "object"
               },
               "memory": "WHAT_PLAY"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$WHAT_PLAY$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Drive to the art gallery and inform me about the ongoing exhibitions.",
      "instances": [
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "art gallery",
                  "location": null,
                  "search_range": 30
               },
               "memory": "SEARCH_RESULT"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the address of the closest art gallery",
                  "json_object": "$SEARCH_RESULT$",
                  "return_type": "string"
               },
               "memory": "GALLERY_ADDRESS"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Get the name of the closest art gallery",
                  "json_object": "$SEARCH_RESULT$",
                  "return_type": "string"
               },
               "memory": "GALLERY_NAME"
            },
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "art galleries at $GALLERY_NAME$"
               },
               "memory": "INTERNET_SEARCH"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user about the current art galleries or report none were found",
                  "data": "$INTERNET_SEARCH$"
               },
               "memory": null
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$GALLERY_ADDRESS$"
                  ]
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Navigate to the stadium, is the nearby merchandise store open?",
      "instances": [
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "Stadium",
                  "location": null,
                  "search_range": 30
               },
               "memory": "STADIUM_LIST"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return address of the most important stadium from JSON list",
                  "json_object": "$STADIUM_LIST$",
                  "return_type": "object"
               },
               "memory": "BEST_STADIUM_ADDRESS"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$BEST_STADIUM_ADDRESS$"
                  ]
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "Stadium merchandise store",
                  "location": "$BEST_STADIUM_ADDRESS$",
                  "search_range": 2
               },
               "memory": "MERCHANDISE"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell the user if the merchandise store is open given a JSON description",
                  "data": "$MERCHANDISE$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "Stadium",
                  "location": null,
                  "search_range": 30
               },
               "memory": "STADIUM_LIST"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return address of the most important stadium from JSON list",
                  "json_object": "$STADIUM_LIST$",
                  "return_type": "object"
               },
               "memory": "BEST_STADIUM_ADDRESS"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "Stadium merchandise store",
                  "location": "$BEST_STADIUM_ADDRESS$",
                  "search_range": 2
               },
               "memory": "MERCHANDISE"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$BEST_STADIUM_ADDRESS$"
                  ]
               },
               "memory": null
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell the user if the merchandise store is open given a JSON description",
                  "data": "$MERCHANDISE$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Put the car in eco mode",
      "instances": [
         [
            {
               "tool_name": "set_driving_mode",
               "args": {
                  "driving_mode": "EFFICIENT"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Put car into sport and set driver and copilot temperature to 25 degrees.",
      "instances": [
         [
            {
               "tool_name": "set_driving_mode",
               "args": {
                  "driving_mode": "SPORT"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "DRIVER"
               }
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "PASSENGER"
               }
            }
         ],
         [
            {
               "tool_name": "set_driving_mode",
               "args": {
                  "driving_mode": "SPORT"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "PASSENGER"
               }
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "DRIVER"
               }
            }
         ],
         [
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "PASSENGER"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "DRIVER"
               },
               "memory": null
            },
            {
               "tool_name": "set_driving_mode",
               "args": {
                  "driving_mode": "SPORT"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "DRIVER"
               },
               "memory": null
            },
            {
               "tool_name": "set_driving_mode",
               "args": {
                  "driving_mode": "SPORT"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 25,
                  "seatzone": "PASSENGER"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Fully open my window",
      "instances": [
         [
            {
               "tool_name": "set_window",
               "args": {
                  "window_level": 100,
                  "what_window": "DRIVER"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Fully close my window",
      "instances": [
         [
            {
               "tool_name": "set_window",
               "args": {
                  "window_level": 0,
                  "what_window": "DRIVER"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Open my back in the right window a bit",
      "instances": [
         [
            {
               "tool_name": "set_window",
               "args": {
                  "window_level": 20,
                  "what_window": "RIGHT"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Close the windows in the back",
      "instances": [
         [
            {
               "tool_name": "set_window",
               "args": {
                  "window_level": 0,
                  "what_window": "RIGHT"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "set_window",
               "args": {
                  "window_level": 0,
                  "what_window": "LEFT"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "If today is a Monday, tell me a joke. Otherwise, explain why BMW is an amazing car brand",
      "instances": [
         [
            {
               "tool_name": "get_current_date",
               "args": null,
               "memory": "CURRENT_DATE"
            },
            {
               "condition": "$CURRENT_DATE$ is a Monday",
               "tools": [
                  {
                     "tool_name": "speak_user",
                     "args": {
                        "query": "Tell user a joke",
                        "data": null
                     },
                     "memory": null
                  }
               ]
            },
            {
               "condition": "$CURRENT_DATE$ is not a Monday",
               "tools": [{
                  "tool_name": "speak_user",
                  "args": {
                     "query": "Explain user why BMW is a good car brand",
                     "data": null
                  },
                  "memory": null
               }]
            }
         ]
      ]
   },
   {
      "instruction": "If it rains, set navigation to closest gym. Otherwise, drive to a burger place",
      "instances": [
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": null
               },
               "memory": "WEATHER_REPORT"
            },
            {
               "condition": "Will it rain soon based on data: $WEATHER_REPORT$",
               "tools": [
                  {
                     "tool_name": "places_tool",
                     "args": {
                        "query": "gym",
                        "location": null,
                        "search_range": 20
                     },
                     "memory": "GYM_SEARCH"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Get the address of the closest gym from this JSON object",
                        "json_object": "$GYM_SEARCH$",
                        "return_type": "string"
                     },
                     "memory": "CLOSEST_GYM_ADDRESS"
                  },
                  {
                     "tool_name": "set_navigation",
                     "args": {
                        "waypoints": [
                           "$CLOSEST_GYM_ADDRESS$"
                        ]
                     },
                     "memory": null
                  }
               ]
            },
            {
               "condition": "It will not rain soon: $WEATHER_REPORT$",
               "tools": [
                  {
                     "tool_name": "places_tool",
                     "args": {
                        "query": "burger places",
                        "location": null,
                        "search_range": 20
                     },
                     "memory": "BURGERS"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Get the address of closest burger restaurant from this JSON object",
                        "json_object": "$BURGERS$",
                        "return_type": "string"
                     },
                     "memory": "CLOSEST_BURGER_ADDRESS"
                  },
                  {
                     "tool_name": "set_navigation",
                     "args": {
                        "waypoints": [
                           "$CLOSEST_BURGER_ADDRESS$"
                        ]
                     },
                     "memory": null
                  }
               ]
            }
         ]
      ]
   },
   {
      "instruction": "Make light inside green if it's weekend, otherwise orange",
      "instances": [
         [
            {
               "tool_name": "get_current_date",
               "args": null,
               "memory": "CURRENT_DATE"
            },
            {
               "condition": "$CURRENT_DATE$ is a weekend day",
               "tools": [
                  {
                     "tool_name": "set_ambient_light",
                     "args": {
                        "light_color": "GREEN"
                     },
                     "memory": null
                  }
               ]
            },
            {
               "condition": "$CURRENT_DATE$ is a weekday",
               "tools": [
                  {
                     "tool_name": "set_ambient_light",
                     "args": {
                        "light_color": "ORANGE"
                     },
                     "memory": null
                  }
               ]
            }
         ]
      ]
   },
   {
      "instruction": "Set the temperature for our guests in the back at 22, play some indie music that everyone will enjoy, choose the best ambient light for soundtrack",
      "instances": [
         [
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 22,
                  "seatzone": "LEFT"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 22,
                  "seatzone": "RIGHT"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "popular indie music",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "THE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Select any playlist from given JSON object",
                  "json_object": "$THE$",
                  "return_type": "object"
               },
               "memory": "O"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$O$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Select best ambient light colour to listen to indie music from choices bellow",
                  "json_object": ["beige", "blue", "cyan", "green", "orange", "red", "white", "yellow"],
                  "return_type": "string"
               },
               "memory": "C"
            },
            {
               "tool_name": "set_ambient_light",
               "args": {
                  "light_color": "$C$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 22,
                  "seatzone": "LEFT"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 22,
                  "seatzone": "RIGHT"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "popular indie music",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "THE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Select any playlist from given JSON object",
                  "json_object": "$THE$",
                  "return_type": "object"
               },
               "memory": "O"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Select best ambient light colour to listen to indie music from choices bellow",
                  "json_object": ["beige", "blue", "cyan", "green", "orange", "red", "white", "yellow"],
                  "return_type": "string"
               },
               "memory": "C"
            },
            {
               "tool_name": "set_ambient_light",
               "args": {
                  "light_color": "$C$"
               },
               "memory": null
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$O$"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 22,
                  "seatzone": "LEFT"
               },
               "memory": null
            },
            {
               "tool_name": "set_temperature",
               "args": {
                  "temperature": 22,
                  "seatzone": "RIGHT"
               },
               "memory": null
            },
            {
               "tool_name": "media_search",
               "args": {
                  "query": "popular indie music",
                  "types": [
                     "playlist"
                  ]
               },
               "memory": "THE"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Select any playlist from given JSON object",
                  "json_object": "$THE$",
                  "return_type": "object"
               },
               "memory": "O"
            },
            {
               "tool_name": "media_control_enqueue",
               "args": {
                  "media_object": "$O$"
               },
               "memory": null
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Select best ambient light colour to listen to indie music from choices bellow",
                  "json_object": ["beige", "blue", "cyan", "green", "orange", "red", "white", "yellow"],
                  "return_type": "string"
               },
               "memory": "C"
            },
            {
               "tool_name": "set_ambient_light",
               "args": {
                  "light_color": "$C$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Open my window if the temperature outside is smaller than outside",
      "instances": [
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": null
               },
               "memory": "U"
            },
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "O"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Return interior temperature as int",
                  "json_object": "$O$",
                  "return_type": "string"
               },
               "memory": "$T$"
            },
            {
               "condition": "Temperature $T$ is higher than one outside $U$",
               "tools": [
                  {
                     "tool_name": "set_window",
                     "args": {
                        "window_level": 50,
                        "what_window": "ALL"
                     },
                     "memory": null
                  }
               ]
            }
         ],
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "O"
            },
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": null
               },
               "memory": "U"
            },
            {
               "condition": "Temperature $O$ is higher than $U$",
               "tools": [
                  {
                     "tool_name": "set_window",
                     "args": {
                        "window_level": 50,
                        "what_window": "ALL"
                     },
                     "memory": null
                  }
               ]
            }
         ]
      ]
   },
   {
      "instruction": "Are any of my windows open?",
      "instances": [
         [
            {
               "tool_name": "get_car_state",
               "args": null,
               "memory": "S"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user whether the windows are open given car state. Larger than 0 means open. Car state:\n",
                  "data": "$S$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Is it sunny in Rome?",
      "instances": [
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": "rome city"
               },
               "memory": "A"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Respond to user whether it is sunny in Rome",
                  "data": "$A$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Set navigation to Madrid if it is sunny there",
      "instances": [
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": "madrid city"
               },
               "memory": "TR"
            },
            {
               "condition": "Based on this data, does it rain: $TR$",
               "tools": [
                  {
                     "tool_name": "speak_user",
                     "args": {
                        "query": "Tell user it rains in Madrid; discard data",
                        "data": null
                     },
                     "memory": null
                  }
               ]
            },
            {
               "condition": "It will not rain based on this data $TR$",
               "tools": [
                  {
                     "tool_name": "query_to_place",
                     "args": {
                        "query": "madrid city center"
                     },
                     "memory": "NAV"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Get address from object and return it",
                        "json_object": "$NAV$",
                        "return_type": "string"
                     },
                     "memory": "NAV_ADDR"
                  },
                  {
                     "tool_name": "set_navigation",
                     "args": {
                        "waypoints": [
                           "$NAV_ADDR$"
                        ]
                     }
                  }
               ]
            }
         ],
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": "madrid city"
               },
               "memory": "TR"
            },
            {
               "condition": "Weather in this report is sunny $TR$",
               "tools": [
                  {
                     "tool_name": "query_to_place",
                     "args": {
                        "query": "madrid city center"
                     },
                     "memory": "NAV"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Get address from object and return it",
                        "json_object": "$NAV$",
                        "return_type": "string"
                     },
                     "memory": "NAV_ADDR"
                  },
                  {
                     "tool_name": "set_navigation",
                     "args": {
                        "waypoints": [
                           "$NAV_ADDR$"
                        ]
                     }
                  }
               ]
            },
            {
               "condition": "Weather in report is rainy $TR$",
               "tools": [
                  {
                     "tool_name": "speak_user",
                     "args": {
                        "query": "Tell user it rains in Madrid; discard data",
                        "data": null
                     },
                     "memory": null
                  }
               ]
            }
         ]
      ]
   },
   {
      "instruction": "What is Wikipedia?",
      "instances": [
         [
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "what is wikipedia?"
               },
               "memory": "W"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "explain user what wikipedia is",
                  "data": "$W$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "what is philosophy?",
      "instances": [
         [
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "what is philosophy?"
               },
               "memory": "W"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "explain user what philosophy is",
                  "data": "$W$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Find a cheap vegan restaurant nearby",
      "instances": [
         [
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "vegan restaurants",
                  "location": null,
                  "search_range": 10
               },
               "memory": "SR"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "Choose the address of the cheapest vegan restaurant and return it from JSON object",
                  "json_object": "$SR$",
                  "return_type": "string"
               },
               "memory": "X"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$X$"
                  ]
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "Mute the volume but don't turn it off",
      "instances": [
         [
            {
               "tool_name": "media_control_volume",
               "args": {
                  "volume": 10
               }
            }
         ]
      ]
   },
   {
      "instruction": "Set navigation to Berlin centre. Is there a cafe at my final location?",
      "instances": [
         [
            {
               "tool_name": "query_to_place",
               "args": {
                  "query": "berlin city"
               },
               "memory": "N"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "get address from object and return it",
                  "json_object": "$N$",
                  "return_type": "string"
               },
               "memory": "N_ADDR"
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$N_ADDR$"
                  ]
               },
               "memory": null
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "cafe",
                  "location": "$N_ADDR$"
               },
               "memory": "WHAT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user about found cafes in Berlin",
                  "data": "$WHAT"
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "query_to_place",
               "args": {
                  "query": "berlin city"
               },
               "memory": "N"
            },
            {
               "tool_name": "llm_parse_json",
               "args": {
                  "query": "get address from object and return it",
                  "json_object": "$N$",
                  "return_type": "string"
               },
               "memory": "N_ADDR"
            },
            {
               "tool_name": "places_tool",
               "args": {
                  "query": "cafe",
                  "location": "$N_ADDR$"
               },
               "memory": "WHAT"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user about found cafes in Berlin",
                  "data": "$WHAT"
               },
               "memory": null
            },
            {
               "tool_name": "set_navigation",
               "args": {
                  "waypoints": [
                     "$N_ADDR$"
                  ]
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "What is the name of the best cafe in Rome? Also lower the volume to bearly hearable",
      "instances": [
         [
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "what is best cafe in Rome?"
               },
               "memory": "BCRJ"
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user what seems be best cafe in Rome",
                  "data": "$BCRJ$"
               },
               "memory": null
            },
            {
               "tool_name": "media_control_volume",
               "args": {
                  "volume": 20
               },
               "memory": null
            }
         ],
         [
            {
               "tool_name": "search_internet",
               "args": {
                  "query": "what is best cafe in Rome?"
               },
               "memory": "BCRJ"
            },
            {
               "tool_name": "media_control_volume",
               "args": {
                  "volume": 20
               },
               "memory": null
            },
            {
               "tool_name": "speak_user",
               "args": {
                  "query": "Tell user what seems be best cafe in Rome",
                  "data": "$BCRJ$"
               },
               "memory": null
            }
         ]
      ]
   },
   {
      "instruction": "If the weather is sunny outside find a cafe, otherwise find a restaurant",
      "instances": [
         [
            {
               "tool_name": "weather_tool",
               "args": {
                  "query": null
               },
               "memory": "WEATHER"
            },
            {
               "condition": "Weather is sunny in report $WEATHER$",
               "tools": [
                  {
                     "tool_name": "places_tool",
                     "args": {
                        "query": "cafe",
                        "search_mode": "near_current_location"
                     },
                     "memory": "PLACES"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Find the best cafe from the list, return it as JSON object",
                        "json_object": "$PLACES$",
                        "return_type": "object"
                     },
                     "memory": "BEST_PLACE"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Get the address from object",
                        "json_object": "$BEST_PLACE$",
                        "return_type": "string"
                     },
                     "memory": "PLACE_ADDRESS"
                  },
                  {
                     "tool_name": "speak_user",
                     "args": {
                        "query": "Tell the user navigation is set to this cafe and give it a very short description",
                        "data": "$PLACE_ADDRESS$"
                     },
                     "memory": null
                  },
                  {
                     "tool_name": "set_navigation",
                     "args": {
                        "waypoints": [
                           "$PLACE_ADDRESS$"
                        ]
                     },
                     "memory": null
                  }
               ]
            },
            {
               "condition": "Weather in report is rainy: $WEATHER$",
               "tools": [
                  {
                     "tool_name": "places_tool",
                     "args": {
                        "query": "restaurant",
                        "search_mode": "near_current_location"
                     },
                     "memory": "PLACES"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Find the best indoor restaurant from the list, return it as JSON object",
                        "json_object": "$PLACES$",
                        "return_type": "object"
                     },
                     "memory": "BEST_PLACE"
                  },
                  {
                     "tool_name": "llm_parse_json",
                     "args": {
                        "query": "Get the address of the object",
                        "json_object": "$BEST_PLACE$",
                        "return_type": "string"
                     },
                     "memory": "PLACE_ADDRESS"
                  },
                  {
                     "tool_name": "speak_user",
                     "args": {
                        "query": "Tell the user navigation is set to this restaurnt and give it a very short description",
                        "data": "$PLACE_ADDRESS$"
                     },
                     "memory": null
                  },
                  {
                     "tool_name": "set_navigation",
                     "args": {
                        "waypoints": [
                           "$PLACE_ADDRESS$"
                        ]
                     },
                     "memory": null
                  }
               ]
            }
         ]
      ]
   }
]